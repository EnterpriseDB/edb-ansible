---
- name: Generate the pg_superuser_password
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: generate_password
  vars:
    input_user: "{{ pg_superuser }}"
    input_password: "{{ pg_superuser_password }}"
  no_log: "{{ disable_logging }}"
  when: pg_superuser_password|length < 1

- name: Set pg_superuser_password
  ansible.builtin.set_fact:
    pg_superuser_password: "{{ input_password }}"
  no_log: "{{ disable_logging }}"
  when: pg_superuser_password|length < 1

- name: Set postgres superuser's database cluster password
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: manage_users
  vars:
    pg_users:
      - name: "{{ pg_superuser }}"
        pass: "{{ pg_superuser_password }}"
  no_log: "{{ disable_logging }}"

- name: Set postgres replication database cluster password
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: manage_users
  vars:
    pg_users:
      - name: "{{ pg_replication_user }}"
        pass: "{{ pg_replication_user_password }}"
        role_attr_flags: replication
  no_log: "{{ disable_logging }}"

- name: Set postgres rewind database cluster password
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: manage_users
  vars:
    pg_users:
      - name: "{{ pg_rewind_user }}"
        pass: "{{ pg_rewind_user_password }}"
  no_log: "{{ disable_logging }}"

- name: Grant minimum privileges to rewind user for rewind
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: manage_privileges
  vars:
    pg_grant_privileges:
      - type: function
        privileges: execute
        schema: pg_catalog
        objects: "pg_ls_dir(text:boolean:boolean),pg_stat_file(text:boolean)"
        roles: "{{ pg_rewind_user }}"
        database: "{{ pg_database }}"
      - type: function
        privileges: execute
        schema: pg_catalog
        objects: "pg_read_binary_file(text),pg_read_binary_file(text:bigint:bigint:boolean)"
        roles: "{{ pg_rewind_user }}"
        database: "{{ pg_database }}"
  no_log: "{{ disable_logging }}"

- name: Set postgres primary_slot_name
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: manage_postgres_params
  vars:
    pg_postgres_conf_params:
      - name: primary_slot_name
        value: "{{ inventory_hostname | regex_replace('[^a-zA-Z0-9_]', '_') }}"
    use_patroni: true
  when:
    - pg_version|int > 11
    - use_replication_slots
  no_log: "{{ disable_logging }}"
