---
- name: Generate the pg_superuser_password
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: generate_password
  vars:
    input_user: "{{ pg_superuser }}"
    input_password: "{{ pg_superuser_password }}"
  no_log: "{{ disable_logging }}"
  when: pg_superuser_password|length < 1

- name: Set pg_superuser_password
  ansible.builtin.set_fact:
    pg_superuser_password: "{{ input_password }}"
  no_log: "{{ disable_logging }}"
  when: pg_superuser_password|length < 1

- name: Add superuser password in pgpass
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: manage_pgpass
  vars:
    pg_pgpass_values:
      - user: "{{ pg_superuser }}"
        password: "{{ pg_superuser_password }}"
        create: true
  no_log: "{{ disable_logging }}"

- name: Generate the pg_replication_user_password
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: generate_password
  vars:
    input_user: "{{ pg_replication_user }}"
    input_password: "{{ pg_replication_user_password }}"
  no_log: "{{ disable_logging }}"
  when: pg_replication_user_password|length < 1

- name: Set pg_replication_user_password
  ansible.builtin.set_fact:
    pg_replication_user_password: "{{ input_password }}"
  no_log: "{{ disable_logging }}"
  when: pg_replication_user_password|length < 1

- name: Add replication password in pgpass
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: manage_pgpass
  vars:
    pg_pgpass_values:
      - user: "{{ pg_replication_user }}"
        password: "{{ pg_replication_user_password }}"
        create: true
  no_log: "{{ disable_logging }}"

- name: Generate the pg_rewind_user_password
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: generate_password
  vars:
    input_user: "{{ pg_rewind_user }}"
    input_password: "{{ pg_rewind_user_password }}"
  no_log: "{{ disable_logging }}"
  when: pg_rewind_user_password|length < 1

- name: Set pg_rewind_user_password
  ansible.builtin.set_fact:
    pg_rewind_user_password: "{{ input_password }}"
  no_log: "{{ disable_logging }}"
  when: pg_rewind_user_password|length < 1

- name: Add rewind password in pgpass
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: manage_pgpass
  vars:
    pg_pgpass_values:
      - user: "{{ pg_rewind_user }}"
        password: "{{ pg_rewind_user_password }}"
        create: true
  no_log: "{{ disable_logging }}"
