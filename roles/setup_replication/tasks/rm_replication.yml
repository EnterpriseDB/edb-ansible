---
- name: Gather service facts
  ansible.builtin.service_facts:

- name: Stop the efm_service
  ansible.builtin.systemd:
    name: "{{ efm_service }}"
    state: stopped
    enabled: false
  when:
    - ansible_facts.services[efm_service] is defined
    - ansible_facts.services[efm_service].state == 'running'
  become: true

- name: Stop Postgres service if running
  ansible.builtin.systemd:
    name: "{{ pg_service }}"
    state: stopped
    enabled: false
  when:
    - ansible_facts.services[pg_service + '.service'] is defined
    - ansible_facts.services[pg_service + '.service'].state == 'running'
  become: true

- name: Drop the default debian database
  ansible.builtin.shell: >
    {{ pg_deb_drop_cluster }} {{ pg_version }} {{ pg_instance_name }}
  args:
    executable: /bin/bash
  changed_when: drop_cluster.rc == 0
  failed_when: drop_cluster.rc != 0
  when: ansible_os_family == 'Debian'
  become: true

- name: Remove configuration directory on Debian family
  ansible.builtin.file:
    path: "/etc/postgresql/{{ pg_version }}/{{ pg_instance_name }}/"
    state: absent
  when:
    - "ansible_os_family == 'Debian'"
    - "pg_type == 'PG'"

- name: Remove configuration directory on Debian family
  ansible.builtin.file:
    path: "/etc/edb-as/{{ pg_version }}/{{ pg_instance_name }}/"
    state: absent
  when:
    - "ansible_os_family == 'Debian'"
    - "pg_type == 'EPAS'"

- name: Remove Postgres data directory if exists
  ansible.builtin.file:
    path: "{{ pg_data }}"
    state: absent
  when:
    - force_data is defined
    - force_data
  become: true

- name: Remove Postgres log directory if exists
  ansible.builtin.file:
    path: "{{ pg_log }}"
    state: absent
  become: true
  when: pg_log|length > 0

- name: Remove Postgres wal directory if exists
  ansible.builtin.file:
    path: "{{ pg_wal }}"
    state: absent
  become: true
  when:
    - pg_wal|length > 0
    - force_wal is defined
    - force_wal

- name: Remove postgres default data directory if exists
  ansible.builtin.file:
    path: "{{ pg_default_data }}"
    state: absent
  become: true
  when: pg_default_data|length > 0

- name: Remove Postgres local wal archive directory if exists
  ansible.builtin.file:
    path: "{{ pg_local_wal_archive_dir }}"
    state: absent
  become: true
  when: pg_local_wal_archive_dir|length > 0

- name: Create unix socket domain directories
  ansible.builtin.file:
    path: "{{ line_item }}"
    state: absent
  with_items: "{{ pg_unix_socket_directories }}"
  loop_control:
    loop_var: line_item
  become: true
  when: pg_unix_socket_directories|length > 0

- name: Remove systemd configuration file on RedHat
  ansible.builtin.file:
    path: "{{ pg_systemd_global_unit_file }}"
    state: absent
  become: true
  when:
    - ansible_os_family == 'RedHat'

- name: Remove systemd unit file on RedHat
  ansible.builtin.file:
    path: "/etc/systemd/system/{{ pg_service }}.service"
    state: absent
  become: true
  when:
    - ansible_os_family == 'RedHat'

- name: Remove physical slots of the standbys
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: manage_slots
  vars:
    pg_slots:
      - name: "{{ inventory_hostname | regex_replace('[^a-zA-Z0-9_]', '_') }}"
        slot_type: physical
        state: absent
  no_log: "{{ disable_logging }}"
  when: use_replication_slots
