---
- name: Gather service facts
  ansible.builtin.service_facts:

- name: Stop the efm_service
  ansible.builtin.systemd:
    name: "{{ efm_service }}"
    state: stopped
  when:
    - ansible_facts.services[efm_service] is defined
    - ansible_facts.services[efm_service].state == 'running'
  become: true

- name: Stop Postgres service if running
  ansible.builtin.systemd:
    name: "{{ pg_service }}"
    state: stopped
  when:
    - ansible_facts.services[pg_service] is defined
    - ansible_facts.services[pg_service].state == 'running'
  become: true

- name: Drop the default debian database
  ansible.builtin.shell: >
    {{ pg_deb_drop_cluster }} {{ pg_version }} {{ pg_instance_name }}
  args:
    executable: /bin/bash
  changed_when: drop_cluster.rc == 0
  failed_when: drop_cluster.rc != 0
  when: ansible_os_family == 'Debian'
  become: true

- name: Remove Postgres data directory if exists
  ansible.builtin.file:
    path: "{{ pg_data }}"
    state: absent
  become: true

- name: Remove Postgres log directory if exists
  ansible.builtin.file:
    path: "{{ pg_log }}"
    state: absent
  become: true
  when: pg_log|length > 0

- name: Remove Postgres wal directory if exists
  ansible.builtin.file:
    path: "{{ pg_wal }}"
    state: absent
  become: true
  when: pg_wal|length > 0

- name: Remove Postgres local wal archive directory if exists
  ansible.builtin.file:
    path: "{{ pg_local_wal_archive_dir }}"
    state: absent
  become: true
  when: pg_local_wal_archive_dir|length > 0
