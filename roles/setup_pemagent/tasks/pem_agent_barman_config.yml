---
- name: Check if barman was registered
  stat:
    path: "{{ pem_agent_bin_path }}/../etc/.barmanregistered"
  become: yes
  register: pemagent_barman_configured
  no_log: "{{ disable_logging }}"

- name: Register barman server using pemagent
  shell: |
    set -o pipefail
    set -eu
    PEM_SERVER_PASSWORD={{ pg_pem_admin_password }} \
    {{ pem_agent_bin_path }}/pemworker \
         --register-barman \
         --description {{ inventory_hostname }} \
         --api-url "http://localhost:7480" \
         --team {{ pg_pem_admin_user }} \
         -c {{ pem_agent_confg_path }}/agent.cfg \
    && touch {{ pem_agent_bin_path }}/../etc/.barmanregistered
  args:
    executable: /bin/bash
    creates: "{{ pem_agent_bin_path }}/../etc/.barmanregistered"
  register: output
  changed_when: "'Barman API successfully registered!' in output.stdout"
  failed_when: "'Barman API successfully registered!' not in output.stdout"
  when: not pemagent_barman_configured.stat.exists
  become: yes
  throttle: 1
  no_log: "{{ disable_logging }}"

- name: Start the {{ pg_backup_api_service }}
  systemd:
    name: "{{ pg_backup_api_service }}"
    daemon_reload: yes
    enabled: yes
    state: started
  become: yes
  no_log: "{{ disable_logging }}"

- name: Start the pem agent service
  systemd:
    name: "{{ pem_agent_service }}"
    daemon_reload: yes
    enabled: yes
    state: restarted
  become: yes
  no_log: "{{ disable_logging }}"
