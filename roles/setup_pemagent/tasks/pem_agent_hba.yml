---
- name: Prepare hba ssl list
  ansible.builtin.set_fact:
    pg_allow_ip_addresses: >-
      {{ pg_allow_ip_addresses | default([]) + [
        {
          "users": "+pem_user",
          "source": node_hostvars.private_ip + "/32",
          "databases": "pem"
          },
          {
           "users": "+pem_agent",
           "source": node_hostvars.private_ip + "/32",
           "databases": "pem",
           "method": "cert"
           },
          {
           "users": pg_pem_admin_user,
           "source": node_hostvars.private_ip + "/32",
           "databases": "pem",
           "method": "scram-sha-256"
           },
          {
           "users": pg_pem_admin_user,
           "source": node_hostvars.private_ip + "/32",
           "databases": "pem",
           "method": "scram-sha-256",
           "contype": "host"
           },
        ] }}
  no_log: "{{ disable_logging }}"

- name: Update PEM server to allow connections from the agent
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: manage_hba_conf
    apply:
      delegate_to: "{{ node.inventory_hostname }}"
  vars:
    pg_hba_ip_addresses: "{{ pg_allow_ip_addresses }}"
  loop: "{{ pem_server_info }}"
  loop_control:
    loop_var: node
  no_log: "{{ disable_logging }}"

- name: Set the local entries for pemagent
  ansible.builtin.set_fact:
    pem_agent_hba_local_entry:
      - users: "{{ pg_pem_agent_user }}"
        source: "127.0.0.1/32"
      - users: "{{ pg_pem_agent_user }}"
        source: "::1/128"
      - users: "{{ pg_pem_agent_user }}"
        source: "{{ node_hostvars.pem_server_private_ip }}"
      - users: "{{ pg_user }}"
        source: "127.0.0.1/32"
      - users: "{{ pg_user }}"
        source: "::1/128"
      - users: "{{ pg_user }}"
        source: "{{ node_hostvars.pem_server_private_ip }}"
  when: >
    group_names | select('search','primary') | list | count > 0
    or
    group_names | select('search','standby') | list | count > 0
  no_log: "{{ disable_logging }}"

- name: Update hba config
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: manage_hba_conf
  vars:
    pg_hba_ip_addresses: "{{ pem_agent_hba_local_entry }}"
  when: >
    group_names | select('search','primary') | list | count > 0
    or
    group_names | select('search','standby') | list | count > 0
  no_log: "{{ disable_logging }}"
