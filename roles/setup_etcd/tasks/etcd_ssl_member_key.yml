---
- name: Check if the member key exists
  ansible.builtin.stat:
    path: "{{ etcd_member_key }}"
  become: true
  register: _etcd_member_key

- name: Check if member cert exists
  ansible.builtin.stat:
    path: "{{ etcd_member_crt }}"
  become: true
  register: _etcd_member_crt

- name: Copy the etcd config file
  ansible.builtin.template:
    src: openssl.cnf.j2
    dest: "{{ etcd_ssl_dir }}/openssl.conf"
    owner: "{{ etcd_owner }}"
    group: "{{ etcd_owner }}"
    mode: "0644"
  become: true

- name: Create member key
  ansible.builtin.command:
    cmd: >-
      openssl genrsa -out {{ etcd_member_key }} 2048
  args:
    creates: "{{ etcd_member_key }}"
  become: true
  become_user: "{{ etcd_owner }}"
  when: not _etcd_member_key.stat.exists

- name: Create certificate request
  ansible.builtin.shell:
    cmd: >-
      openssl req -new  \
        -key {{ etcd_member_key }} \
        -out {{ etcd_member_csr }} \
        -subj "/CN=etcd-{{ inventory_hostname }}"
    creates: "{{ etcd_member_csr }}"
  become: true
  become_user: "{{ etcd_owner }}"
  when: not _etcd_member_key.stat.exists

- name: Create the CA-signed server certificate
  ansible.builtin.shell:
    cmd: >-
      openssl x509 -req \
        -in {{ etcd_member_csr }} \
        -days {{ etcd_ssl_valid_days }} \
        -CA {{ etcd_ca_crt }} \
        -CAkey {{ etcd_ca_key }} \
        -CAcreateserial \
        -CAserial {{ etcd_ssl_dir }}/etcd-{{ inventory_hostname }}.srl \
        -extensions v3_req \
        -extfile "{{ etcd_ssl_dir }}/openssl.conf" \
        -out {{ etcd_member_crt }}
    creates: "{{ etcd_member_crt }}"
  become: true
  become_user: "{{ etcd_owner }}"
  when:
    - not _etcd_member_crt.stat.exists

# generate server + client key + crt
# server key + crt
- name: Set the etcd_dn var
  ansible.builtin.set_fact:
    etcd_dn: "{{ etcd_ssl_csr_dn }}"

- name: Check if the etcd server key exists
  ansible.builtin.stat:
    path: "{{ etcd_ssl_dir }}/server-{{ inventory_hostname }}.key"
  become: true
  register: _etcd_server_key

- name: Check if the etcd server crt exists
  ansible.builtin.stat:
    path: "{{ etcd_ssl_dir }}/server-{{ inventory_hostname }}.pem"
  become: true
  register: _etcd_server_crt

- name: Create server key
  ansible.builtin.command:
    cmd: >-
      openssl genrsa -out {{ etcd_ssl_dir }}/server-{{ inventory_hostname }}.key
  args:
    creates: "{{ etcd_ssl_dir }}/server-{{ inventory_hostname }}.key"
  become: true
  become_user: "{{ etcd_owner }}"
  when: not _etcd_server_key.stat.exists

- name: Create certificate request
  ansible.builtin.shell:
    cmd: >-
      openssl req -new \
        -key {{ etcd_ssl_dir }}/server-{{ inventory_hostname }}.key \
        -out {{ etcd_ssl_dir }}/server-{{ inventory_hostname }}.csr \
        -subj "/C={{ etcd_dn.C }}/L={{ etcd_dn.L }}/O={{ etcd_dn.O }}/CN={{ etcd_dn.CN }}/emailAddress={{ etcd_dn.EMAIL }}"
  become: true
  become_user: "{{ etcd_owner }}"
  when: not _etcd_server_key.stat.exists

- name: Create the CA-signed server certificate
  ansible.builtin.shell:
    cmd: >-
      openssl x509 -req \
        -in {{ etcd_ssl_dir }}/server-{{ inventory_hostname }}.csr \
        -days {{ etcd_ssl_valid_days }} \
        -CA {{ etcd_ca_crt }} \
        -CAkey {{ etcd_ca_key }} \
        -CAcreateserial \
        -CAserial {{ etcd_ssl_dir }}/etcd-server.srl \
        -extensions v3_req \
        -extfile "{{ etcd_ssl_dir }}/openssl.conf" \
        -out {{ etcd_ssl_dir }}/server-{{ inventory_hostname }}.pem
    creates: "{{ etcd_ssl_dir }}/server-{{ inventory_hostname }}.pem"
  become: true
  become_user: "{{ etcd_owner }}"
  when: not _etcd_server_crt.stat.exists

# client key + crt
- name: Check if the etcd client key exists
  ansible.builtin.stat:
    path: "{{ etcd_ssl_dir }}/client-{{ inventory_hostname }}.key"
  become: true
  register: _etcd_client_key

- name: Check if the etcd client crt exists
  ansible.builtin.stat:
    path: "{{ etcd_ssl_dir }}/client-{{ inventory_hostname }}.pem"
  become: true
  register: _etcd_client_crt

- name: Create client key
  ansible.builtin.command:
    cmd: >-
      openssl genrsa -out {{ etcd_ssl_dir }}/client-{{ inventory_hostname }}.key
  args:
    creates: "{{ etcd_ssl_dir }}/client-{{ inventory_hostname }}.key"
  become: true
  become_user: "{{ etcd_owner }}"
  when: not _etcd_client_key.stat.exists

- name: Create certificate request
  ansible.builtin.shell:
    cmd: >-
      openssl req -new \
        -key {{ etcd_ssl_dir }}/client-{{ inventory_hostname }}.key \
        -out {{ etcd_ssl_dir }}/client-{{ inventory_hostname }}.csr \
        -subj "/C={{ etcd_dn.C }}/L={{ etcd_dn.L }}/O={{ etcd_dn.O }}/CN={{ etcd_dn.CN }}/emailAddress={{ etcd_dn.EMAIL }}"
  become: true
  become_user: "{{ etcd_owner }}"
  when: not _etcd_client_key.stat.exists

- name: Create the CA-signed client certificate
  ansible.builtin.shell:
    cmd: >-
      openssl x509 -req \
        -in {{ etcd_ssl_dir }}/client-{{ inventory_hostname }}.csr \
        -days {{ etcd_ssl_valid_days }} \
        -CA {{ etcd_ca_crt }} \
        -CAkey {{ etcd_ca_key }} \
        -CAcreateserial \
        -CAserial {{ etcd_ssl_dir }}/etcd-client--{{ inventory_hostname }}.srl \
        -extensions v3_req \
        -extfile "{{ etcd_ssl_dir }}/openssl.conf" \
        -out {{ etcd_ssl_dir }}/client-{{ inventory_hostname }}.pem
    creates: "{{ etcd_ssl_dir }}/client-{{ inventory_hostname }}.pem"
  become: true
  become_user: "{{ etcd_owner }}"
  when: not _etcd_client_crt.stat.exists
