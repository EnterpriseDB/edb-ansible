---
# validate dbt2 db packages installation
- name: Set dbt2_db_pkg_list
  ansible.builtin.set_fact:
    dbt2_db_pkg_list: ['perf', 'rsync', 'tmux', 'fuse', 'fuse-libs', 'sysstat', 'dejavu-fonts-common', 'fontconfig']
  when: ansible_os_family == 'RedHat'

# validate dbt2 db packages installation
- name: Set dbt2_db_pkg_list
  ansible.builtin.set_fact:
    dbt2_db_pkg_list: ['linux-perf', 'rsync', 'tmux', 'fuse', 'libfuse2', 'sysstat', 'fonts-dejavu', 'fontconfig']
  when: ansible_os_family == 'Debian'

- name: Gather the package facts
  ansible.builtin.package_facts:
    strategy: "all"

- name: Check that all packages in dbt2_db_pkg_list has been installed
  ansible.builtin.assert:
    that:
      - ansible_facts.packages[package] is defined
    fail_msg: "Package {{ package }} has not been installed."
    success_msg: "Package {{ package }} has been installed."
  loop: "{{ dbt2_db_pkg_list }}"
  loop_control:
    loop_var: package

# ensure the DBT-2 AppImage has been installed to the proper location
- name: Stat to dbt2_path
  ansible.builtin.stat:
    path: "{{ dbt2_path }}"
  register: dbt2_path_stat
  become: true

- name: Check if DBT-2 AppImage was installed properly on DB
  ansible.builtin.assert:
    that:
      - dbt2_path_stat.stat['exists']|bool
    fail_msg: "DBT-2 AppImage at {{ dbt2_path }} was not created properly"
    success_msg: "DBT-2 AppImage at {{ dbt2_path }} was created successfully"

# validate dbt2 user
- name: Run query to check dbt2 user is in pg_user
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: execute_sql_scripts
  vars:
    pg_query:
      - query: "Select * from pg_user where usename = '{{ pg_owner }}'"
        db: "{{ pg_database }}"

- name: Set user_query_result with sql_query_output
  ansible.builtin.set_fact:
    user_query_result: "{{ sql_query_output }}"
  become: true

- name: Check if DBT2 postgres user was successfully created
  ansible.builtin.assert:
    that:
      - user_query_result.results[0].query_result[0]['usename'] == pg_owner
    fail_msg: "DBT2 postgres user was not successfully created."
    success_msg: "DBT2 postgres user was successfully created."
  run_once: true

# reset variables
- name: Reset variables
  ansible.builtin.set_fact:
    dbt2_db_pkg_list: null
    dbt2_path_stat: null
    user_query_result: null
