---

- name: Set the os variable
  ansible.builtin.set_fact:
    os: "{{ ansible_distribution | replace('RedHat', 'RHEL') }}{{ ansible_distribution_major_version }}"

- name: Reference variables
  ansible.builtin.include_vars: "{{ pg_type }}_{{ ansible_os_family }}.yml"

- name: Check support for Operating System
  ansible.builtin.fail:
    msg: "Operating System = {{ os }} not supported."
  when: os not in supported_os

- name: Check supported versions for Database engine
  ansible.builtin.fail:
    msg: "Database Engine Version = {{ pg_version }} not supported.
          Supported versions are {{ supported_pg_version }}"
  when: pg_version|int not in supported_pg_version

- name: Gather service facts
  ansible.builtin.service_facts:

- name: Open PEM TCP port 8443
  ansible.posix.firewalld:
    port: "8443/tcp"
    permanent: true
    state: enabled
    immediate: true
  when:
    - ansible_facts.services['firewalld.service'] is defined
    - ansible_facts.services['firewalld.service'].state == 'running'
    - ansible_facts.services['firewalld.service'].status == 'enabled'
  become: true

- name: Install ufw package on Debian
  ansible.builtin.package:
    name: ufw
    state: present
  when: ansible_os_family == 'Debian'
  become: true

- name: Allow OpenSSH connections through ufw on Debian
  community.general.ufw:
    rule: allow
    name: OpenSSH
  when: ansible_os_family == 'Debian'
  become: true

- name: Open PEM TCP port 8443 on Debian
  community.general.ufw:
    rule: allow
    port: '8443'
    proto: tcp
  when: ansible_os_family == 'Debian'
  become: true

#- name: Allow Apache Full connections through ufw on Debian
#  community.general.ufw:
#    rule: allow
#    name: 'WWW'
#  when: ansible_os_family == 'Debian'
#  become: true

- name: Enable and start ufw on Debian
  ansible.builtin.systemd:
    name: ufw
    state: started
    enabled: true
  when: ansible_os_family == 'Debian'
  become: true

- name: Set the node_hostvars variable
  ansible.builtin.set_fact:
    node_hostvars: "{{ hostvars[inventory_hostname] }}"

- name: Update /etc/hosts based on use_hostname
  ansible.builtin.import_tasks: linux_update_etc_hosts.yml
  when:
    - use_hostname|bool
    - update_etc_file|bool
  become: true

- name: Remove pem server based on force_pemserver/force_initdb
  ansible.builtin.import_tasks: rm_pem_server_install.yml
  when: >
      ((force_pemserver is defined and force_pemserver)
       or (force_initdb is defined and force_initdb))
  become: true

- name: Install and configure pemserver
  become: true
  block:
    - name: Import pem_server_user
      ansible.builtin.import_tasks: pem_server_user.yml
    - name: Import pem_server_install
      ansible.builtin.import_tasks: pem_server_install.yml
    - name: Import pem_server_config
      ansible.builtin.import_tasks: pem_server_config.yml
    - name: Import pem_server
      ansible.builtin.import_tasks: pem_server_hba.yml

- name: Update pem probes and alerts
  ansible.builtin.import_tasks: pem_server_probe_alert.yml

- name: Reset the variables
  ansible.builtin.set_fact:
    node_hostvars:
