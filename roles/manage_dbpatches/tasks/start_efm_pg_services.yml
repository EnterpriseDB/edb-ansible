---
- name: Start the pg service
  ansible.builtin.systemd:
    name: "{{ pg_service }}"
    state: started
  when:
    - ansible_facts.services[pg_service + '.service'] is defined
    - ansible_facts.services[pg_service + '.service'].state == 'running'
    - ansible_facts.services[pg_service + '.service'].status == 'enabled'
  become: true

- name: Wait for Postgres port to become open on the host, don't start checking for 2 seconds
  ansible.builtin.wait_for:
    port: "{{ pg_port }}"
    state: started
    delay: 2
    timeout: 10
  become: true

- name: Update pg_service to bind efm_service
  ansible.builtin.lineinfile:
    path: "/etc/systemd/system/{{ pg_service }}.service"
    line: "{{ item.line }}"
    regexp: "{{ item.regexp }}"
    insertafter: "{{ item.insertafter | default('EOF') }}"
  become: true
  loop:
    - line: "BindsTo={{ efm_service }}.service"
      regexp: "^BindsTo=.*"
      insertafter: "^\\[Unit\\]$"
  when:
    - efm_eager_failover|bool
    - ansible_os_family == 'RedHat'
  register: pg_service_changed

- name: Force systemd to reread configs of pg_service after changes
  ansible.builtin.systemd:
    daemon_reload: true
  when:
    - pg_service_changed is defined
    - pg_service_changed.changed

- name: Start failover manager service if exists
  ansible.builtin.systemd:
    name: "{{ efm_service }}"
    state: started
  when:
    - ansible_facts.services[efm_service + '.service'] is defined
    - ansible_facts.services[efm_service + '.service'].state == 'running'
    - ansible_facts.services[efm_service + '.service'].status == 'enabled'
  become: true

- name: Wait for efm port efm_port to become open on the host, don't start checking for 5 seconds
  ansible.builtin.wait_for:
    host: "{{ efm_listen_host }}"
    port: "{{ efm_port }}"
    state: started
    delay: 5
    timeout: 10
  become: true

- name: Wait for efm admin port efm_admin_port to become open on the host, don't start checking for 5 seconds
  ansible.builtin.wait_for:
    host: "127.0.0.1"
    port: "{{ efm_admin_port }}"
    state: started
    delay: 5
    timeout: 10
  become: true
