---
- name: Ensure tablespace directories exists
  file:
    path: "{{ line_item.location }}"
    owner: "{{ pg_owner }}"
    group: "{{ pg_group }}"
    mode: 0700
    state: "{{ 'absent' if line_item.state is defined and line_item.state == 'absent' else 'directory' }}"
  no_log: "{{ disable_logging }}"
  become: yes
  with_items: "{{ pg_tablespaces }}"
  loop_control:
    loop_var: line_item
  when:
    - pg_tablespaces|length > 0

- name: Check database is in read/write mode
  community.postgresql.postgresql_query:
    query: "SELECT pg_catalog.pg_is_in_recovery()"
    port: "{{ pg_port }}"
    db: "{{ pg_database }}"
    login_user: "{{ pg_owner }}"
    login_unix_socket: "{{ pg_unix_socket_directories[0] }}"
  no_log: "{{ disable_logging }}"
  become: yes
  become_user: "{{ pg_owner }}"
  register: db_status

- name: Manage optional user defined tablespaces
  community.postgresql.postgresql_tablespace:
    tablespace: "{{ line_item.name }}"
    location: "{{ line_item.location }}"
    owner: "{{ line_item.owner | default(pg_owner) }}"
    rename_to: "{{ line_item.rename_to | default(omit) }}"
    session_role: "{{ line_item.session_role | default(omit) }}"
    set: "{{ line_item.tablespace_option | default(omit) }}"
    trust_input: "{{ line_item.trust_input | default('yes') }}"
    port: "{{ pg_port }}"
    db: "{{ line_item.db | default(pg_database) }}"
    state: "{{ line_item.state | default('present') }}"
    login_user: "{{ pg_owner }}"
    login_unix_socket: "{{ pg_unix_socket_directories[0] }}"
  no_log: "{{ disable_logging }}"
  become: yes
  become_user: "{{ pg_owner }}"
  with_items: "{{ pg_tablespaces }}"
  loop_control:
    loop_var: line_item
  when:
    - not db_status.query_result[0].pg_is_in_recovery
    - pg_tablespaces|length > 0
