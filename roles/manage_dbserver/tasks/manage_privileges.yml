---
- name: Check if the host is a standby node
  import_tasks: check_database_is_standby.yml
  vars:
    host_is_standby: false

- name: Manage privileges
  when: not host_is_standby
  block:
    - name: Grant object privilege to users
      community.postgresql.postgresql_privs:
        type: "{{ line_item.type }}"
        state: "{{ line_item.grant | default('present') }}"
        privs: "{{ line_item.privileges }}"
        schema: "{{ line_item.schema | default(omit) }}"
        objs: "{{ line_item.objects }}"
        roles: "{{ line_item.roles }}"
        db: "{{ line_item.database }}"
        login_user: "{{ pg_owner }}"
        login_unix_socket: "{{ pg_unix_socket_directories[0] }}"
        port: "{{ pg_port }}"
      become: true
      become_user: "{{ pg_owner }}"
      with_items: "{{ pg_grant_privileges }}"
      loop_control:
        loop_var: line_item
      no_log: "{{ disable_logging }}"
      when:
        - pg_grant_privileges|length > 0

    - name: Grant role to users
      community.postgresql.postgresql_membership:
        group: "{{ line_item.role }}"
        target_role: "{{ line_item.user }}"
        state: "{{ line_item.grant | default('present') }}"
        db: "{{ pg_database }}"
        login_user: "{{ pg_owner }}"
        login_unix_socket: "{{ pg_unix_socket_directories[0] }}"
        port: "{{ pg_port }}"
      become: true
      become_user: "{{ pg_owner }}"
      with_items: "{{ pg_grant_roles }}"
      loop_control:
        loop_var: line_item
      no_log: "{{ disable_logging }}"
      when:
        - pg_grant_roles|length > 0
