---
- name: Check user defined parameters and update
  community.postgresql.postgresql_set:
    login_unix_socket: "{{ pg_unix_socket_directories[0] }}"
    port: "{{ pg_port }}"
    db: "{{ pg_database }}"
    login_user: "{{ pg_owner }}"
    name: "{{ line_item.name }}"
    value: "{{ line_item.value }}"
  when: pg_postgres_conf_params|length > 0
  with_items: "{{ pg_postgres_conf_params }}"
  become: true
  become_user: "{{ pg_owner }}"
  loop_control:
    loop_var: line_item
  no_log: "{{ disable_logging }}"
  register: params

- name: Register the restart requirements
  set_fact:
    params_restart_required: true
  when:
    - pg_postgres_conf_params|length > 0
    - line_item.changed and line_item.restart_required
  with_items: "{{ params.results }}"
  loop_control:
    loop_var: line_item
  no_log: "{{ disable_logging }}"

- name: Reload the pg service
  systemd:
    name: "{{ pg_service }}"
    daemon_reload: true
    state: reloaded
  become: true
  when:
    - pg_postgres_conf_params|length > 0
    - params.changed
    - params_restart_required is defined
    - not params_restart_required

- name: Restart the pg service
  systemd:
    name: "{{ pg_service }}"
    daemon_reload: true
    state: restarted
  become: true
  when:
    - pg_postgres_conf_params|length > 0
    - params.changed
    - params_restart_required is defined
    - params_restart_required

- name: Reset the restart_required
  set_fact:
    params_restart_required: false
  when:
    - params_restart_required is defined
