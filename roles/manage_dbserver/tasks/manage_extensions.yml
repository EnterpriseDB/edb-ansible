---
- name: Check database is in read/write mode
  community.postgresql.postgresql_query:
    query: "SELECT pg_catalog.pg_is_in_recovery()"
    port: "{{ pg_port }}"
    db: "{{ pg_database }}"
    login_user: "{{ pg_owner }}"
    login_unix_socket: "{{ pg_unix_socket_directories[0] }}"
  no_log: "{{ disable_logging }}"
  become: true
  become_user: "{{ pg_owner }}"
  register: db_status

- name: Add EDB Postgres Tuner to managed extensions
  ansible.builtin.set_fact:
    pg_extensions: "{{ pg_extensions + [{\"name\": \"edb_pg_tuner\", \
                                         \"database\": \"{{ pg_database }}\", \
                                         \"state\": \"present\"}] }}"
  when: >-
    enable_edb_repo|bool
    and install_edb_postgres_tuner|bool
    and pg_version|int >= 11

- name: Manage postgres extensions
  community.postgresql.postgresql_ext:
    name: "{{ line_item.name }}"
    port: "{{ pg_port }}"
    db: "{{ line_item.database }}"
    cascade: true
    state: "{{ line_item.state | default('present') }}"
    login_user: "{{ pg_owner }}"
    login_unix_socket: "{{ pg_unix_socket_directories[0] }}"
  become: true
  become_user: "{{ pg_owner }}"
  with_items: "{{ pg_extensions }}"
  loop_control:
    loop_var: line_item
  no_log: "{{ disable_logging }}"
  when:
    - not db_status.query_result[0].pg_is_in_recovery
    - pg_extensions|length > 0
