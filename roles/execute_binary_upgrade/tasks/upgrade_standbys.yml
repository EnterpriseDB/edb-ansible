---
- name: Enable and start systemd service on primary
  ansible.builtin.systemd:
    name: "{{ new_pg_service }}"
    daemon_reload: true
    state: started
    enabled: true
  become: true
  when: "'primary' in group_names"

- name: Stop old_pg_service
  ansible.builtin.systemd:
    name: "{{ old_pg_service }}"
    state: stopped
    enabled: false
  become: true
  when: "'standby' in group_names"

- name: Include setup_replication role for standby's when not use_link_method
  ansible.builtin.include_role:
    name: setup_replication
  vars:
    pg_version: "{{ new_pg_version }}"
    pg_service: "{{ new_pg_service }}"
    pg_data: "{{ new_pg_data }}"
    pg_default_data: "{{ new_pg_default_data }}"
    pg_wal: "{{ new_pg_wal }}"
    pg_systemd_global_unit_file: "{{ new_pg_systemd_global_unit_file | default('') }}"
    pg_bin_path: "{{ new_pg_bin_path }}"
    pg_initdb: "{{ new_pg_initdb }}"
    pg_initdb_options: "{{ new_pg_initdb_options }}"
    pg_port: "{{ new_pg_port }}"
    pg_basebackup: "{{ pg_basebackup }}"
    pg_basebackup_options: "{{ pg_basebackup_options }}"
    use_validation: false
  no_log: "{{ disable_logging }}"
  when: "'standby' in group_names"

