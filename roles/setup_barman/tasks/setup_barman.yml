---
- name: Set the os variable
  ansible.builtin.set_fact:
    os: "{{ ansible_distribution | replace('RedHat', 'RHEL') }}{{ ansible_distribution_major_version }}"

- name: Reference pg_type variables
  ansible.builtin.include_vars: "{{ pg_type }}_{{ ansible_os_family }}.yml"

- name: Set barman_backup_method
  ansible.builtin.set_fact:
    barman_backup_method: "{{ hostvars[inventory_hostname].barman_backup_method | default('rsync') }}"

- name: Check barman_backup_method value
  ansible.builtin.fail:
    msg: "Barman backup method {{ barman_backup_method }} not supported."
  when: >
    barman_backup_method not in ['postgres', 'rsync']

- name: Fail if barman_primary_vip is defined and barman_backup_method is not Postgres
  ansible.builtin.fail:
    msg: "The hostvar barman_primary_vip is not compatible with rsync backups"
  when:
    - hostvars[inventory_hostname].barman_primary_vip is defined
    - barman_backup_method != 'postgres'

- name: Check support for Operating System
  ansible.builtin.fail:
    msg: "Operating System = {{ os }} not supported."
  when: os not in supported_os

- name: Check if Database Engine is currently supported
  ansible.builtin.fail:
    msg: "Database Engine = {{ pg_type }} {{ pg_version }} is not supported"
  when: >
    pg_type == 'EPAS' and pg_version|int == 15

- name: Reference pg_type variables
  ansible.builtin.include_vars: "{{ role_path }}/../init_dbserver/vars/{{ pg_type }}_{{ ansible_os_family }}.yml"

- name: Reference barman server variables
  ansible.builtin.include_vars: "{{ role_path }}/../setup_barmanserver/defaults/main.yml"

- name: Update /etc/hosts based on use_hostname
  when:
    - use_hostname|bool
    - update_etc_file|bool
  become: true
  block:
    - name: Update /etc/hosts
      ansible.builtin.import_tasks: linux_update_etc_hosts.yml

- name: Include the package installation tasks
  ansible.builtin.include_role:
    name: setup_barmanserver
    tasks_from: install_packages

- name: Include the password generation tasks
  ansible.builtin.include_tasks: generate_pg_password.yml
  when: barman_pg_password is not defined

- name: Include the barman .pgpass file tasks
  ansible.builtin.include_tasks: update_barman_pgpass.yml

- name: Include the Postgres user creation tasks
  ansible.builtin.include_tasks: create_pg_user.yml
  when: >
    'primary' in group_names

- name: Include the HBA file update tasks
  ansible.builtin.include_tasks: update_pg_hba.yml

- name: Include the SSH keys generation tasks
  ansible.builtin.include_tasks: generate_ssh_keys.yml

- name: Include the SSH keys exchange tasks
  ansible.builtin.include_tasks: exchange_ssh_keys.yml

- name: Include the barman configuration tasks
  ansible.builtin.include_tasks: configure_barman.yml
  when: >
    hostvars[inventory_hostname].barman_no_configuration is not defined
    or hostvars[inventory_hostname].barman_no_configuration|bool

- name: Include the Postgres configuration tasks for backup
  ansible.builtin.include_tasks: configure_pg_backup.yml
  when: >
    hostvars[inventory_hostname].barman_no_configuration is not defined
    or hostvars[inventory_hostname].barman_no_configuration|bool

- name: Include the barman post configuration tasks
  ansible.builtin.include_tasks: post_configure_barman.yml
  when: >
    hostvars[inventory_hostname].barman_no_configuration is not defined
    or hostvars[inventory_hostname].barman_no_configuration|bool
