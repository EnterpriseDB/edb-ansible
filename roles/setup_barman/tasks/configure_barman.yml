---

- name: Get Barman server informations
  set_fact:
    _barman_server_info: "{{ lookup('edb_devops.edb_postgres.barman_server', wantlist=True) }}"

- name: Fail if barman server informations are not found
  fail:
    msg: "Unable to find barman server informations"
  when:
    - _barman_server_info|length == 0

- name: Set _barman_server_public_ip
  set_fact:
    _barman_server_public_ip: "{{ _barman_server_info[0].ansible_host }}"

- name: Set _pg_host when not using hostname
  set_fact:
    _pg_host: "{{ hostvars[inventory_hostname].private_ip }}"
  when: "not use_hostname"

- name: Set _pg_host when using hostname
  set_fact:
    _pg_host: "{{ inventory_hostname }}"
  when: use_hostname

- name: Ensure the barman configuration for the current host is present
  template:
    src: "./templates/barman.{{ barman_backup_method }}.template"
    dest: "{{ barman_configuration_files_directory }}/{{ inventory_hostname }}-{{ pg_instance_name }}.conf"
    owner: "{{ barman_user }}"
    group: "{{ barman_group }}"
    mode: 0700
  delegate_to: "{{ _barman_server_public_ip }}"
  become: yes
  vars:
    pg_host: "{{ _pg_host }}"

- name: Reset local variables
  set_fact:
    _barman_server_info: ""
    _pg_host: null
