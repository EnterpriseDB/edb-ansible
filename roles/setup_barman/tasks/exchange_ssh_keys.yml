---

- name: Get Barman server informations
  set_fact:
    _barman_server_info: "{{ lookup('edb_devops.edb_postgres.barman_server', wantlist=True) }}"

- name: Fail if barman server informations are not found
  fail:
    msg: "Unable to find barman server informations"
  when:
    - _barman_server_info|length == 0

- name: Set _barman_server_public_ip
  set_fact:
    _barman_server_public_ip: "{{ _barman_server_info[0].ansible_host }}"

- name: Fetch barman server SSH public key
  slurp:
    src: "{{ barman_home + '/.ssh/id_rsa.pub' }}"
  delegate_to: "{{ _barman_server_public_ip }}"
  register: _barman_server_ssh_public_key_b64
  become: yes

- name: Set _barman_server_ssh_public_key
  set_fact:
      _barman_server_ssh_public_key: "{{ _barman_server_ssh_public_key_b64.content | b64decode | trim }}"

- name: Fetch {{ pg_owner }} SSH public key
  slurp:
    src: "{{ pg_user_home + '/.ssh/id_rsa.pub' }}"
  register: _pg_ssh_public_key_b64
  become: yes

- name: Set _pg_ssh_public_key
  set_fact:
      _pg_ssh_public_key: "{{ _pg_ssh_public_key_b64.content | b64decode | trim }}"

- name: Ensure {{ pg_owner }} SSH public key is on the barman server
  lineinfile:
    path: "{{ barman_home + '/.ssh/authorized_keys' }}"
    owner: "{{ barman_user }}"
    group: "{{ barman_group }}"
    mode: 0600
    line: "{{ _pg_ssh_public_key }}"
    create: yes
  delegate_to: "{{ _barman_server_public_ip }}"
  become: yes

- name: Ensure {{ barman_user }} SSH public key is on the Postgres server
  lineinfile:
    path: "{{ pg_user_home + '/.ssh/authorized_keys' }}"
    owner: "{{ pg_owner }}"
    group: "{{ pg_group }}"
    mode: 0600
    line: "{{ _barman_server_ssh_public_key }}"
    create: yes

- name: Run ssh-keyscan from the Barman server
  command: ssh-keyscan {{ hostvars[ansible_hostname].private_ip }}
  register: _barman_ssh_keyscan_output
  delegate_to: "{{ _barman_server_public_ip }}"
  become: yes
  changed_when: false

- name: Add {{ pg_owner }} SSH public key into barman server known hosts
  known_hosts:
    path: "{{ barman_home + '/.ssh/known_hosts' }}"
    name: "{{ hostvars[ansible_hostname].private_ip }}"
    key: "{{ _item }}"
  with_items: "{{ _barman_ssh_keyscan_output.stdout_lines }}"
  loop_control:
    loop_var: _item
  delegate_to: "{{ _barman_server_public_ip }}"
  become: yes
  no_log: "{{ disable_logging }}"

- name: Run ssh-keyscan from the Postgres server
  command: ssh-keyscan {{ hostvars[ansible_hostname].barman_server_private_ip }}
  register: _pg_ssh_keyscan_output
  become: yes
  changed_when: false

- name: Add {{ barman_user }} SSH public key into Postgres server known hosts
  known_hosts:
    path: "{{ pg_user_home + '/.ssh/known_hosts' }}"
    name: "{{ hostvars[ansible_hostname].barman_server_private_ip }}"
    key: "{{ _item }}"
  with_items: "{{ _pg_ssh_keyscan_output.stdout_lines }}"
  loop_control:
    loop_var: _item
  become: yes
  no_log: "{{ disable_logging }}"

- name: Reset _barman_server_info
  set_fact:
    _barman_server_info: ""
