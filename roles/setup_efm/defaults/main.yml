---
# efm credentials
os: ""
pg_version: 14
efm_version: 4.5
efm_eager_failover: false
efm_install_version: "{{ efm_version | replace('.', '') }}"
pg_instance_name: main
disable_logging: true
force_efm_install: false
pass_dir: "~/.edb"
use_hostname: true
update_etc_file: true
use_patroni: false

pg_efm_user: "efm"
pg_efm_user_password: ""
pg_ssl: true

efm_nodes_list: ""
efm_cluster_name: "{{ pg_instance_name }}"
efm_service: "edb-efm-{{ efm_cluster_name }}-{{ efm_version }}"
edb_efm_lock_file: "/var/lock/{{ efm_cluster_name }}-{{ efm_version }}/{{ efm_cluster_name }}.lock"
# common variables require for the role
etc_hosts_lists: []
primary_public_ip: ""
primary_private_ip: ""
input_password: ""
pg_allow_ip_addresses: []
ping_server_ip: "8.8.8.8"
efm_user_email: "unknown@gmail.com"

# setting validate_only to true allows you to validate setup on an existing node
# use_validation flag applies to deployment configuration and validation after setup
validate_only: false
use_validation: true
remove_only: false

efm_port: 7800
efm_admin_port: 7809

efm_default_parameters:
  - {name: db.user, value: "{{ pg_efm_user }}"}
  - {name: db.port, value: "{{ pg_port }}"}
  - {name: db.database, value: "{{ pg_efm_database }}"}
  - {name: db.service.owner, value: "{{ pg_owner }}"}
  - {name: db.service.name, value: "{{ pg_service }}"}
  - {name: db.bin, value: "{{ pg_bin_path }}"}
  - {name: db.recovery.dir, value: "{{ pg_data }}"}
  - {name: db.data.dir, value: "{{ pg_data }}"}
  - {name: user.email, value: "{{ efm_user_email }}"}
  - {name: auto.allow.hosts, value: true}
  - {name: stable.nodes.file, value: true}
  - {name: local.period, value: "3"}
  - {name: local.timeout, value: "5"}
  - {name: local.timeout.final, value: "5"}
  - {name: remote.timeout, value: "5"}
  - {name: node.timeout, value: "5"}
  - {name: admin.port, value: "{{ efm_admin_port }}"}
  - {name: ping.server.ip, value: "{{ ping_server_ip }}"}

efm_physical_slot_param:
  - {name: update.physical.slots.period, value: "5"}

efm_cascaded_replica_param:
  - {name: promotable, value: false}
  - {name: auto.reconfigure, value: false}

efm_eager_failover_params:
  - {name: primary.shutdown.as.failure, value: true}
  - {name: enable.stop.cluster, value: false}

# example of efm_init_parameters:
# efm_init_parameters:
#   - name: script.notification
#     value: "/usr/edb/efm-3.10/bin/notification.sh"
efm_init_parameters: ""

efm_properties: "/etc/edb/efm-{{ efm_version }}/{{ efm_cluster_name }}.properties"
efm_node_file: "/etc/edb/efm-{{ efm_version }}/{{ efm_cluster_name }}.nodes"
efm_bin_path: "/usr/edb/efm-{{ efm_version }}/bin"

efm_packages_redhat:
  - java-1.8.0-openjdk
  - mailx
  - edb-efm{{ efm_install_version }}

efm_packages_debian:
  - bsd-mailx
  - openjdk-8-jdk
  - edb-efm{{ efm_install_version }}

# Enable efm-api-node-state deployment
efm_api_node_state: false
efm_api_node_state_version: "0.2.0"
efm_api_node_state_port: 8000
efm_api_node_state_listen_addr: "0.0.0.0"
efm_api_node_state_supported_os:
  - CentOS7
  - RedHat7
  - OracleLinux7
efm_api_download_url: "https://github.com/EnterpriseDB/efm-api-node-state/releases/download/v{{ efm_api_node_state_version }}"
efm_api_node_state_rpm: "efm-api-node-state-{{ efm_api_node_state_version }}-1.el7.x86_64.rpm"
# Integration with pgpoolII
pgpool2_version: 4.1
efm_pgpool2_integration: false
pcp_admin_user: "pcpadmin"
pcp_admin_user_password: ""
pcp_passfile: "/var/efm/.pcppass"
pcp_passfile_owner: "efm"
pcp_passfile_group: "efm"
pcp_passfile_mode: "0600"
pgpool2_pcp_port: 9898
detach_on_agent_failure: true
efm_pgpool2_lb_attach: "{{ efm_bin_path }}/pcp_attach_all.sh %h %t"
efm_pgpool2_lb_detach: ""

supported_os:
  - CentOS7
  - CentOS8
  - RedHat7
  - RedHat8
  - Ubuntu20
  - Ubuntu22
  - Debian9
  - Debian10
  - Rocky8
  - AlmaLinux8
  - OracleLinux7

supported_pg_type:
  - EPAS
  - PG

supported_pg_version:
  - 10
  - 11
  - 12
  - 13
  - 14
  - 15

supported_efm_version:
  - "4.6"
  - "4.5"
  - "4.4"
  - "4.3"
  - "4.2"
  - "4.1"
  - "4.0"
  - "3.10"
