---
# validate efm user
- name: Run query to check if efm user was setup correctly
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: execute_sql_scripts
    apply:
      delegate_to: "{{ primary_private_ip }}"
      run_once: true
  vars:
    pg_query:
      - query: "Select * from pg_user where usename = 'efm' and userepl = 't'"
        db: "{{ pg_database }}"

- name: Set efm_query_result with sql_query_output
  ansible.builtin.set_fact:
    efm_query_result: "{{ sql_query_output }}"
  become: true

- name: Check if efm user is present
  ansible.builtin.assert:
    that:
      - efm_query_result.results[0].query_result[0]['usename'] == 'efm'
    fail_msg: "EFM user was not created correctly."
    success_msg: "EFM user was created correctly."
  run_once: true

# validate efm service
- name: Run command to check efm cluster status
  ansible.builtin.shell: |
    set -o pipefail
    {{ efm_bin_path }}/efm cluster-status {{ efm_cluster_name }} | grep UP
  args:
    executable: /bin/bash
  become: true
  become_user: "{{ pg_owner }}"
  run_once: true
  delegate_to: "{{ primary_private_ip }}"
  register: efm_cluster_check_res
  changed_when: efm_cluster_check_res != '0'

- name: Check if EFM service has been started on all nodes
  ansible.builtin.assert:
    that:
      - efm_cluster_check_res.stdout_lines|length == efm_cluster_nodes|length
    fail_msg: "EFM service has not started on all the nodes."
    success_msg: "EFM service has been successfully started on all the nodes."
  run_once: true

# validate efm packages
- name: Gather the package facts
  ansible.builtin.package_facts:
    strategy: "all"

- name: Check that all required packages have been installed on RedHat
  ansible.builtin.assert:
    that:
      - ansible_facts.packages[item] is defined
    fail_msg: "Package {{ item }} has not been installed."
    success_msg: "Package {{ item }} has been installed."
  loop:
    - java-1.8.0-openjdk
    - mailx
  when: ansible_os_family == 'RedHat'

- name: Check that all required packages have been installed on Debian
  ansible.builtin.assert:
    that:
      - ansible_facts.packages[item] is defined
    fail_msg: "Package {{ item }} has not been installed."
    success_msg: "Package {{ item }} has been installed."
  loop:
    - openjdk-8-jdk
    - bsd-mailx
  when: ansible_os_family == 'Debian'

- name: Reset variables
  ansible.builtin.set_fact:
    efm_query_result: null
    efm_cluster_check_res: null
