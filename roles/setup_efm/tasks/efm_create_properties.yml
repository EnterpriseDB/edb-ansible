---
- name: Check if we have efm.properties file or not
  stat:
    path: "{{ efm_properties }}"
  become: yes
  register: stat_efm_properties

- name: Check if we have efm service file or not
  stat:
    path: "/usr/lib/systemd/system/{{ efm_service }}.service"
  become: yes
  when: ansible_os_family == 'RedHat'
  register: efm_service_file

- name: Check if we have efm service file or not
  stat:
    path: "/lib/systemd/system/{{ efm_service }}.service"
  become: yes
  when: ansible_os_family == 'Debian'
  register: efm_service_file

- name: Create efm properties file
  copy:
    src: "/etc/edb/efm-{{ efm_version }}/efm.properties.in"
    dest: "{{ efm_properties }}"
    owner: "{{ pg_efm_user }}"
    group: "{{ pg_efm_user }}"
    mode: "0644"
    remote_src: yes
  when: not stat_efm_properties.stat.exists
  become: yes

- name: Copy the efm.nodes.template to the server
  template:
    src: efm.nodes.template
    dest: "{{ efm_node_file }}"
    owner: "{{ pg_efm_user }}"
    group: "{{ pg_efm_user }}"
    mode: 0644
  become: yes
  register: efm_nodes_update

- name: Copy the efm service file
  template:
    src: edb-efm.service
    dest: "/usr/lib/systemd/system/{{ efm_service }}.service"
    owner: root
    group: root
    mode: 0644
  become: yes
  when:
    - ansible_os_family == 'RedHat'
    - not efm_service_file.stat.exists

- name: Copy the efm service file
  template:
    src: edb-efm.service
    dest: "/lib/systemd/system/{{ efm_service }}.service"
    owner: root
    group: root
    mode: 0644
  become: yes
  when:
    - ansible_os_family == 'Debian'
    - not efm_service_file.stat.exists
