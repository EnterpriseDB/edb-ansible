---

- name: Set the os variable
  set_fact:
    os: "{{ ansible_distribution | replace('RedHat', 'RHEL') }}{{ ansible_distribution_major_version }}"

- name: Check support for Operating System
  fail:
    msg: "Operating System = {{ os }} not supported."
  when: os not in supported_os

- name: Check supported versions for Database engine
  fail:
    msg: "Database Engine Version = {{ pg_version }} not supported.
          Supported versions are {{ supported_pg_version }}"
  when: pg_version|int not in supported_pg_version

- name: Check if Database Engine is supported
  fail:
    msg: "Database Engine = {{ pg_type }} {{ pg_version }}
          is not supported on RHEL8/CentOS8."
  when:
    - pg_type == 'EPAS' and pg_version|int < 12
    - os in ['RHEL8','CentOS8']

- name: Set force_install based on the user input
  set_fact:
    force_install: "{{ hostvars[inventory_hostname].force_install }}"
  when: hostvars[inventory_hostname].force_install is defined
  register: output

- name: Remove Postgres packages on CentOS7 or RHEL7
  block:
    - include_tasks: "{{ pg_type }}_rhel7_rm_install.yml"
  when:
    - force_install
    - os in ['CentOS7', 'RHEL7']
  become: yes

- name: Remove Postgres packages on CentOS8 or RHEL8
  block:
    - include_tasks: "{{ pg_type }}_rhel8_rm_install.yml"
  when:
    - force_install
    - os in ['CentOS8', 'RHEL8']
  become: yes

- name: Install and Configure Postgres on CentOS7 or RHEL7
  block:
    - include_tasks: "{{ pg_type }}_rhel7_install.yml"
  become: yes
  when: os in ['CentOS7', 'RHEL7']

- name: Install and Configure Postgres on CentOS8 or RHEL8
  block:
    - include_tasks: "{{ pg_type }}_rhel8_install.yml"
  become: yes
  when: os in ['CentOS8', 'RHEL8']

- name: Reset force_install based on the user input
  set_fact:
    force_install: false
