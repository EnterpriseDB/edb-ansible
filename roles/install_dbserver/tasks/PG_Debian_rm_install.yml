---
- name: Gather service facts
  ansible.builtin.service_facts:

- name: Set fact pg_service for Debian
  set_fact:
    pg_service: "postgresql@{{ pg_major_version }}-{{ deb_cluster_name }}.service"
  when: ansible_os_family == 'Debian'

- name: Stop pg service if running
  ansible.builtin.systemd:
    name: "{{ pg_service }}"
    state: stopped
    enabled: false
  when:
    - ansible_facts.services[pg_service] is defined
    - ansible_facts.services[pg_service].state == 'running'
    - not ansible_module_running_in_container
  become: true

- name: Stop pg service if running container
  ansible.builtin.command: >
    {{ pg_bin_path }}/pg_ctl -D {{ pg_default_data }} stop
  when: ansible_module_running_in_container
  become: true
  become_method: su
  become_user: "{{ pg_owner }}"
  ignore_errors: true


- name: Remove postgreSQL
  package:
    name:
      - python3-psycopg2
      - postgresql-{{ pg_major_version }}
      - postgresql-client-{{ pg_major_version }}
      - postgresql-server-dev-{{ pg_major_version }}
    state: absent
    update_cache: true
  become: true

- name: Gather the package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Check PostgreSQL other versions
  command: echo {{ version }}
  loop: "{{ supported_pg_major_version }}"
  loop_control:
    loop_var: version
  when: ansible_facts.packages[ 'postgresql-' ~ version|int ] is defined
  register: other_version_exist

- name: Remove postgreSQL-common
  package:
    name:
      - postgresql-common
      - postgresql-client-common
    state: absent
    update_cache: true
  become: true
  when: not other_version_exist.changed

- name: Remove python-psycopg2
  package:
    name:
      - python-psycopg2
    state: absent
    update_cache: true
  when:
    - os in ['Ubuntu18','Debian9', 'Debian10']
  become: true

- name: Remove sslutils
  ansible.builtin.package:
    name:
      - postgresql-{{ pg_major_version }}-sslutils
    state: absent
    update_cache: true
  become: true
  when: pg_ssl
