- name: Set _local_host and _remote_host when using hostname
  ansible.builtin.set_fact:
    _local_host: "{{ local_node.inventory_hostname }}"
    _remote_host: "{{ remote_node.inventory_hostname }}"
  when: use_hostname|bool

- name: Set _local_host and _remote_host when not using hostname
  ansible.builtin.set_fact:
    _local_host: "{{ local_node.private_ip }}"
    _remote_host: "{{ remote_node.private_ip }}"
  when: not use_hostname|bool

- name: Fetch remote server SSH public key
  ansible.builtin.slurp:
    src: "{{ pg_user_home + '/.ssh/id_rsa.pub' }}"
  delegate_to: "{{ remote_node.inventory_hostname }}"
  register: _remote_server_ssh_public_key_b64
  become: true

- name: Set _remote_server_ssh_public_key
  ansible.builtin.set_fact:
      _remote_server_ssh_public_key: "{{ _remote_server_ssh_public_key_b64.content | b64decode | trim }}"

- name: Fetch local {{ pg_owner }} SSH public key
  ansible.builtin.slurp:
    src: "{{ pg_user_home + '/.ssh/id_rsa.pub' }}"
  register: _local_ssh_public_key_b64
  become: true

- name: Set _local_ssh_public_key
  set_fact:
      _local_ssh_public_key: "{{ _local_ssh_public_key_b64.content | b64decode | trim }}"

- name: Ensure local {{ pg_owner }} SSH public key is on the remote server
  ansible.builtin.lineinfile:
    path: "{{ pg_user_home + '/.ssh/authorized_keys' }}"
    owner: "{{ pg_owner }}"
    group: "{{ pg_group }}"
    mode: 0600
    line: "{{ _local_ssh_public_key }}"
    create: true
  delegate_to: "{{ remote_node.inventory_hostname }}"
  become: true

- name: Ensure remote {{ pg_owner }} SSH public key is on the local server
  ansible.builtin.lineinfile:
    path: "{{ pg_user_home + '/.ssh/authorized_keys' }}"
    owner: "{{ pg_owner }}"
    group: "{{ pg_group }}"
    mode: 0600
    line: "{{ _remote_server_ssh_public_key }}"
    create: true

- name: Run ssh-keyscan from the remote server
  ansible.builtin.command: ssh-keyscan {{ _local_host }}
  register: _remote_ssh_keyscan_output
  delegate_to: "{{ remote_node.inventory_hostname }}"
  become: true
  changed_when: false

- name: Add local {{ pg_owner }} SSH public key into remote server known hosts
  ansible.builtin.known_hosts:
    path: "{{ pg_user_home + '/.ssh/known_hosts' }}"
    name: "{{ _local_host }}"
    key: "{{ _item }}"
  with_items: "{{ _remote_ssh_keyscan_output.stdout_lines }}"
  loop_control:
    loop_var: _item
  delegate_to: "{{ remote_node.inventory_hostname }}"
  become: true
  become_user: "{{ pg_owner }}"
  no_log: "{{ disable_logging }}"

- name: Run ssh-keyscan from the local server
  ansible.builtin.command: ssh-keyscan {{ _remote_host }}
  register: _local_ssh_keyscan_output
  become: yes
  changed_when: false

- name: Add remote SSH public key into local server known hosts
  ansible.builtin.known_hosts:
    path: "{{ pg_user_home + '/.ssh/known_hosts' }}"
    name: "{{ _remote_host }}"
    key: "{{ _item }}"
  with_items: "{{ _local_ssh_keyscan_output.stdout_lines }}"
  loop_control:
    loop_var: _item
  become: true
  become_user: "{{ pg_owner }}"
  no_log: "{{ disable_logging }}"
