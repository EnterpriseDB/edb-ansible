---
- name: Check if cs_type is consistent and the sampe 'cs_type' across the entire list
  ansible.builtin.assert:
    that:
      - pgd_commit_scopes | map(attribute='cs_type') | unique | length == 1
      - pgd_commit_scopes | map(attribute='cs_type') | difference(['CAMO', 'GROUP_COMMIT']) | length == 0
    msg: "The 'cs_type' values in 'pgd_commit_scopes' should be either 'CAMO' or 'GROUP_COMMIT'."

- name: Check and fail for empty values
  ansible.builtin.fail:
    msg: "Empty value detected for '{{ item.cs_name }}', '{{ item.cs_type }}', '{{ item.cs_origin_node_group }}', or '{{ item.cs_rule }}'"
  when: item.cs_name == '' or item.cs_type == '' or item.cs_origin_node_group == '' or item.cs_rule == ''
  loop: "{{ pgd_commit_scopes }}"

- name: Create a string array from member_nodes
  ansible.builtin.set_fact:
    member_nodes_array: "{{ pgd_commit_scopes | map(attribute='member_nodes') | flatten }}"

- name: Check for duplicates in member_nodes_array
  ansible.builtin.set_fact:
    has_duplicates: "{{ member_nodes_array | length != member_nodes_array | unique | list | count }}"
  run_once: true

- name: Fail if duplicates are found
  ansible.builtin.fail:
    msg: "Duplicates found in member_nodes_array"
  when: has_duplicates

- name: Check default_group_cs
  ansible.builtin.assert:
    that:
      - pgd_commit_scopes | map(attribute='default_group_cs') | select("equalto", true) | list | count > 0
    fail_msg: "At least one 'default_group_cs' value should be set to true."
