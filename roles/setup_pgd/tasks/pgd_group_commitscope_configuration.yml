---
# Group Commit Scope
<<<<<<< HEAD
=======
- name: Run query to check if PGD group commit scope exists
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: execute_sql_scripts
  vars:
    pg_query:
      - query: "SELECT COUNT(1) FROM bdr.node_group WHERE node_group_name  = '{{ pgd_commit_scopes[1].cs_name }}'"
        db: "{{ pgd_cluster_database }}"

- name: Store status of existence of PGD group commit scope
  ansible.builtin.set_fact:
    _pgd_groupcommitscope_exists: "{{ sql_query_output.results[0].query_result[0].count | int }}"

>>>>>>> c5b23aa (Added support for camo and group commit scopes. Updated 'README.md' for 'setup_pgd' role. Added tests for pgd configuration settings in 'main.yml' in 'init_dbserver' role.)
- name: Run query to check if PGD group commit scope origin node group
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: execute_sql_scripts
  vars:
    pg_query:
<<<<<<< HEAD
      - query: "SELECT COUNT(1) FROM bdr.node_group WHERE node_group_name  = '{{ item.cs_origin_node_group }}'"
=======
      - query: "SELECT COUNT(1) FROM bdr.node_group WHERE node_group_name  = '{{ pgd_commit_scopes[1].cs_origin_node_group }}'"
>>>>>>> c5b23aa (Added support for camo and group commit scopes. Updated 'README.md' for 'setup_pgd' role. Added tests for pgd configuration settings in 'main.yml' in 'init_dbserver' role.)
        db: "{{ pgd_cluster_database }}"

- name: Store status of existence of PGD commit scope origin node group
  ansible.builtin.set_fact:
    _pgd_groupcommit_originnodegroup_exists: "{{ sql_query_output.results[0].query_result[0].count | int }}"

- name: Run query to check if PGD group commit parent group exists or not
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: execute_sql_scripts
  vars:
    pg_query:
<<<<<<< HEAD
      - query: "SELECT COUNT(1) FROM bdr.node_group WHERE node_group_name  = '{{ item.parent_group }}'"
=======
      - query: "SELECT COUNT(1) FROM bdr.node_group WHERE node_group_name  = '{{ pgd_commit_scopes[1].parent_group }}'"
>>>>>>> c5b23aa (Added support for camo and group commit scopes. Updated 'README.md' for 'setup_pgd' role. Added tests for pgd configuration settings in 'main.yml' in 'init_dbserver' role.)
        db: "{{ pgd_cluster_database }}"

- name: Store status of existence of PGD group commit parent group
  ansible.builtin.set_fact:
    _pgd_groupcommit_parentgroup_exists: "{{ sql_query_output.results[0].query_result[0].count | int }}"

- name: Create PGD Cluster group commit scope origin node group
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: execute_sql_scripts
  vars:
    pg_query:
<<<<<<< HEAD
      - query: "SELECT bdr.create_node_group(node_group_name := '{{ item.cs_origin_node_group }}',
                                      parent_group_name := '{{ item.parent_group }}',
=======
      - query: "SELECT bdr.create_node_group(node_group_name := '{{ pgd_commit_scopes[1].cs_origin_node_group }}',
                                      parent_group_name := '{{ pgd_commit_scopes[1].parent_group }}',
>>>>>>> c5b23aa (Added support for camo and group commit scopes. Updated 'README.md' for 'setup_pgd' role. Added tests for pgd configuration settings in 'main.yml' in 'init_dbserver' role.)
                                      join_node_group := false
                                      )"
        db: "{{ pgd_cluster_database }}"
    ignore_query_execution_error: false
  when:
<<<<<<< HEAD
    - inventory_hostname == item.member_nodes[0]
    - _pgd_groupcommit_originnodegroup_exists|int == 0 and _pgd_groupcommit_parentgroup_exists|int == 1
    - item.cs_type == 'GROUP_COMMIT'
=======
    - inventory_hostname == pgd_commit_scopes[1].member_nodes[0]
    - _pgd_groupcommit_originnodegroup_exists|int == 0 and _pgd_groupcommit_parentgroup_exists|int == 1
    - pgd_commit_scopes[1].cs_type == 'GROUP_COMMIT'
>>>>>>> c5b23aa (Added support for camo and group commit scopes. Updated 'README.md' for 'setup_pgd' role. Added tests for pgd configuration settings in 'main.yml' in 'init_dbserver' role.)

- name: Run query to re-check if PGD group commit scope origin node group
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: execute_sql_scripts
  vars:
    pg_query:
<<<<<<< HEAD
      - query: "SELECT COUNT(1) FROM bdr.node_group WHERE node_group_name  = '{{ item.cs_origin_node_group }}'"
=======
      - query: "SELECT COUNT(1) FROM bdr.node_group WHERE node_group_name  = '{{ pgd_commit_scopes[1].cs_origin_node_group }}'"
>>>>>>> c5b23aa (Added support for camo and group commit scopes. Updated 'README.md' for 'setup_pgd' role. Added tests for pgd configuration settings in 'main.yml' in 'init_dbserver' role.)
        db: "{{ pgd_cluster_database }}"

- name: Store status of existence of PGD commit scope origin node group
  ansible.builtin.set_fact:
    _pgd_groupcommit_originnodegroup_exists: "{{ sql_query_output.results[0].query_result[0].count | int }}"

<<<<<<< HEAD
# FIX ME: Get 'join' to work
=======
>>>>>>> c5b23aa (Added support for camo and group commit scopes. Updated 'README.md' for 'setup_pgd' role. Added tests for pgd configuration settings in 'main.yml' in 'init_dbserver' role.)
- name: Switch node towards PGD node sub group when Group Commit
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: execute_sql_scripts
  vars:
    pg_query:
<<<<<<< HEAD
      - query: "SELECT bdr.switch_node_group(node_group_name := '{{ item.cs_origin_node_group }}',
=======
      - query: "SELECT bdr.switch_node_group(node_group_name := '{{ pgd_commit_scopes[1].cs_origin_node_group }}',
>>>>>>> c5b23aa (Added support for camo and group commit scopes. Updated 'README.md' for 'setup_pgd' role. Added tests for pgd configuration settings in 'main.yml' in 'init_dbserver' role.)
                                      wait_for_completion := true
                                      )"
        db: "{{ pgd_cluster_database }}"
    ignore_query_execution_error: false
  when:
    - inventory_hostname == node
    - _pgd_groupcommit_originnodegroup_exists|int == 1
<<<<<<< HEAD
    - item.cs_type == 'GROUP_COMMIT'
  loop: "{{ item.member_nodes }}"
=======
    - pgd_commit_scopes[1].cs_type == 'GROUP_COMMIT'
  loop: "{{ pgd_commit_scopes[1].member_nodes }}"
>>>>>>> c5b23aa (Added support for camo and group commit scopes. Updated 'README.md' for 'setup_pgd' role. Added tests for pgd configuration settings in 'main.yml' in 'init_dbserver' role.)
  loop_control:
    loop_var: node

- name: Configure PGD Cluster with a group commit scope
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: execute_sql_scripts
    apply:
      throttle: 1
  vars:
    pg_query:
<<<<<<< HEAD
      - query: "SELECT bdr.add_commit_scope(commit_scope_name := '{{ item.cs_name }}',
                                          origin_node_group := '{{ item.cs_origin_node_group }}',
                                          rule := '{{ item.cs_rule }}'
=======
      - query: "SELECT bdr.add_commit_scope(commit_scope_name := '{{ pgd_commit_scopes[1].cs_name }}',
                                          origin_node_group := '{{ pgd_commit_scopes[1].cs_origin_node_group }}',
                                          rule := '{{ pgd_commit_scopes[1].cs_rule }}'
>>>>>>> c5b23aa (Added support for camo and group commit scopes. Updated 'README.md' for 'setup_pgd' role. Added tests for pgd configuration settings in 'main.yml' in 'init_dbserver' role.)
                                          )"
        db: "{{ pgd_cluster_database }}"
    ignore_query_execution_error: false
  when:
<<<<<<< HEAD
    - inventory_hostname == node
    - _pgd_groupcommit_originnodegroup_exists|int == 1
  loop: "{{ item.member_nodes }}"
  loop_control:
    loop_var: node

- name: Run query to check if PGD group commit scope exists
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: execute_sql_scripts
  vars:
    pg_query:
      - query: "SELECT COUNT(1) FROM bdr.node_group WHERE node_group_name  = '{{ item.cs_name }}'"
        db: "{{ pgd_cluster_database }}"

- name: Store status of existence of PGD group commit scope
  ansible.builtin.set_fact:
    _pgd_groupcommitscope_exists: "{{ sql_query_output.results[0].query_result[0].count | int }}"

=======
     - inventory_hostname == node
     - _pgd_groupcommit_originnodegroup_exists|int == 1
  loop: "{{ pgd_commit_scopes[1].member_nodes }}"
  loop_control:
    loop_var: node

>>>>>>> c5b23aa (Added support for camo and group commit scopes. Updated 'README.md' for 'setup_pgd' role. Added tests for pgd configuration settings in 'main.yml' in 'init_dbserver' role.)
- name: Configure PGD Cluster default Group Commit Scope
  ansible.builtin.include_role:
    name: manage_dbserver
    tasks_from: execute_sql_scripts
    apply:
      throttle: 1
  vars:
    pg_query:
<<<<<<< HEAD
      - query: "SELECT bdr.alter_node_group_option(node_group_name := '{{ item.cs_origin_node_group }}',
                                      config_key := 'default_commit_scope',
                                      config_value := '{{ item.cs_name }}'
=======
      - query: "SELECT bdr.alter_node_group_option(node_group_name := '{{ pgd_commit_scopes[1].cs_origin_node_group }}',
                                      config_key := 'default_commit_scope',
                                      config_value := '{{ pgd_commit_scopes[1].cs_name }}'
>>>>>>> c5b23aa (Added support for camo and group commit scopes. Updated 'README.md' for 'setup_pgd' role. Added tests for pgd configuration settings in 'main.yml' in 'init_dbserver' role.)
                                      )"
        db: "{{ pgd_cluster_database }}"
    ignore_query_execution_error: false
  when:
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> abab58a (Added checks for 'pgd_commit_scopes' list. Removed 'streaming' and 'max_prepared' for GROUP COMMIT SCOPE.)
    - item.default_group_cs|bool
    - item.cs_type|string == 'GROUP_COMMIT'
    - _pgd_groupcommitscope_exists|int == 1 and _pgd_groupcommit_originnodegroup_exists|int == 1

- name: Restart the pg service
  ansible.builtin.systemd:
    name: "{{ pg_service }}"
    state: restarted
  become: true
=======
     - pgd_commit_scopes[1].default_group_cs|bool == true
     - pgd_commit_scopes[1].cs_type|string == 'GROUP_COMMIT'
     - _pgd_camoscope_exists|int == 1 and _pgd_camo_originnodegroup_exists|int == 1
>>>>>>> c5b23aa (Added support for camo and group commit scopes. Updated 'README.md' for 'setup_pgd' role. Added tests for pgd configuration settings in 'main.yml' in 'init_dbserver' role.)
