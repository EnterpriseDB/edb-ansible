---
os: ""
pg_type: PG
pg_version: 14
pg_ssl: true
pg_instance_name: main
pg_remote_ssl_src: false
enable_edb_repo: true
install_edb_postgres_tuner: false

# TDE functionality key
edb_enable_tde: false
edb_key_unwrap_cmd: ""
edb_key_wrap_cmd: ""
edb_master_key: ""
edb_secure_master_key: ""
edb_master_key_location: "/etc/edb/keyloc"
edb_master_key_plain_file: "{{ edb_master_key_location }}/master_key.plain"
edb_secure_master_key_file: "{{ edb_master_key_location }}/master_secure_key.key"

disable_logging: true
use_replication_slots: true
use_hostname: true
update_etc_file: true
enable_core_dump: false

# setting validate_only to true allows you to validate setup on an existing node
# use_validation flag applies to deployment configuration and validation after setup
validate_only: false
use_validation: true

pass_dir: "~/.edb"

pg_local_wal_archive_dir: ""
edb_audit_directory: ""

# unix socket domain directories
pg_unix_socket_directories:
  - "/var/run/postgresql"

# initial configuration for starting postgres
# example:
# pg_init_conf_params:
# - name: "edb_filter_log.redact_password_commands"
#   value: "true"

pg_init_conf_params: []
# postgres port
pg_port: 5432

# postgres database
pg_database: "postgres"

# postgres user
pg_owner: "postgres"
pg_group: "postgres"

# Local path to SSL server key and certificate to be sent to the server
# if empty, they are generated
pg_ssl_key_file: ""
pg_ssl_cert_file: ""
pg_ssl_ca_file: ""
pg_ssl_crl_file: ""

# PGD variable
pgd_version: 5
install_pgd: false
pgd_cluster_database: "{{ pg_database }}"
pgd_cluster_database_owner: "{{ pg_owner }}"
pgd_cluster_database_owner_password: ""
pgd_replication_user: "pgd_replication_user"
pgd_replication_user_password: ""
pgd_cluster_name: "pgd_cluster"
pgd_local_node_name: "{{ inventory_hostname | regex_replace('[^a-zA-Z0-9_]', '_') }}"
initdb_executed: true
setup_pgd_cli: true
# if placed elsewhere, you will need to use the -f or --config-file flag on a pgd command
pgd_cli_config_file: "/etc/edb/pgd-cli/pgd-cli-config.yml"

# HBA variable
pg_allow_ip_addresses: []

# PGD Cluster Nodes
pgd_cluster_nodes: []

# PGD DSN variables
local_node_dsn: ""
lead_primary_dsn: ""

# For CAMO Commit Scopes
max_prepared_transactions: 100

# The following parameters must be configured in the 'pgd_commit_scopes' list
# the values below are examples and should be adjusted to your requirements
#  for CAMO
#  - cs_type: 'CAMO'
#  - cs_name: 'camo_scope_1'
#  - parent_group: 'pgd_cluster'
#  - cs_origin_node_group: 'pgd_two_nodes'
#  - member_nodes: ['edb-primary1', 'edb-primary2']
#  - default_group_cs: true
#  - cs_rule: "ALL ( pgd_two_nodes ) ON visible CAMO DEGRADE ON (timeout=500s) TO ASYNC"
#  for GROUP_COMMIT
#  - cs_type: 'GROUP_COMMIT'
#  - cs_name: 'group_commit_scope_1'
#  - parent_group: 'pgd_cluster'
#  - cs_origin_node_group: 'pgd_gc_nodes'
#  - member_nodes: ['edb-primary3']
#  - default_group_cs: true
#  - cs_rule: "ALL ( pgd_remaining_nodes ) GROUP COMMIT"
pgd_commit_scopes: []

etc_hosts_lists: []

supported_os:
  - CentOS7
  - CentOS8
  - RedHat7
  - RedHat8
  - Rocky8
  - AlmaLinux8
  - OracleLinux7

supported_pg_type:
  - EPAS
  - PG

supported_pg_version:
  - 14
  - 15

supported_pgd_version:
  - 5
