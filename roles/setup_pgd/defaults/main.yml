---
os: ""
pg_type: PG
pg_version: 14
pg_ssl: true
pg_instance_name: main
pg_remote_ssl_src: false
# EFM service information
efm_version: 4.5
efm_cluster_name: "{{ pg_instance_name }}"
efm_service: "edb-efm-{{ efm_cluster_name }}-{{ efm_version }}"

# TDE functionality key
edb_enable_tde: false
edb_key_unwrap_cmd: ""
edb_key_wrap_cmd: ""
edb_master_key: ""
edb_secure_master_key: ""
edb_master_key_location: "/etc/edb/keyloc"
edb_master_key_plain_file: "{{ edb_master_key_location }}/master_key.plain"
edb_secure_master_key_file: "{{ edb_master_key_location }}/master_secure_key.key"

disable_logging: true
use_replication_slots: true
use_hostname: true
update_etc_file: true
enable_core_dump: false

# setting validate_only to true allows you to validate setup on an existing node
# use_validation flag applies to deployment configuration and validation after setup
validate_only: false
use_validation: true

pass_dir: "~/.edb"

pg_wal: ""
pg_local_wal_archive_dir: ""
pg_data: "/var/lib/pgsql/{{ pg_version }}/data"
pg_default_data: "/var/lib/pgsql/{{ pg_version }}/data"
edb_audit_directory: ""
pg_encoding: ""

# log directory and filename
pg_log: "/var/log/postgres"
pg_log_filename: "postgresql-%a.log"

# postgres service
pg_service: "postgresql-{{ pg_version }}"

# required & optional directories
pg_user_home: "/var/lib/pgsql"
pg_bin_path: "/usr/pgsql-{{ pg_version }}/bin"
pg_initdb: "{{ pg_bin_path }}/postgresql-{{ pg_version }}-setup initdb"
pg_initdb_options: "-k --encoding=UTF-8 --locale=en_US.UTF-8"

# unix socket domain directories
pg_unix_socket_directories:
  - "/var/run/postgresql"

# initial configuration for starting postgres
# example:
# pg_init_conf_params:
# - name: "edb_filter_log.redact_password_commands"
#   value: "true"

pg_init_conf_params: []
# postgres port
pg_port: 5432

# postgres database
pg_database: "postgres"

# postgres user
pg_owner: "postgres"
pg_group: "postgres"

# postgres superuser
pg_superuser: "postgres"
pg_superuser_password: ""
pg_random_password: true

# Local path to SSL server key and certificate to be sent to the server
# if empty, they are generated
pg_ssl_key_file: ""
pg_ssl_cert_file: ""
pg_ssl_ca_file: ""
pg_ssl_crl_file: ""

# Input variables
input_user: ""
input_password: ""

# PGD variable
pgd_version: 5
install_pgd: false
pgd_cluster_database: "{{ pg_database }}}}"
pgd_cluster_database_owner: "{{ pg_superuser }}"
pgd_cluster_database_owner_password: ""
pgd_replication_user: "pgd_replication_user"
pgd_replication_user_password: ""
pgd_cluster_name: "pgd_cluster"

# HBA variable
pg_allow_ip_addresses: []

# PGD Cluster Nodes
pgd_cluster_nodes: []

# PGD DSN variables
local_node_dsn: "host={{ hostvars[inventory_hostname].private_ip }} port={{ pg_port }} user={{ pgd_replication_user }} dbname={{ pgd_cluster_database }}"
lead_primary_dsn: ""

etc_hosts_lists: []

supported_os:
  - CentOS7
  - CentOS8
  - RedHat7
  - RedHat8
  - Ubuntu20
  - Debian9
  - Debian10
  - Rocky8
  - AlmaLinux8
  - OracleLinux7

supported_pg_type:
  - EPAS
  - PG

supported_pg_version:
  - 10
  - 11
  - 12
  - 13
  - 14
  - 15