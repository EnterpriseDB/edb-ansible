---
- name: Get pgBackRest server informations
  ansible.builtin.set_fact:
    _pgbackrest_server_info: "{{ lookup('edb_devops.edb_postgres.pgbackrest_server', wantlist=True) }}"

- name: Fail if pgbackrest server informations are not found
  ansible.builtin.fail:
    msg: "Unable to find pgBackRest server informations"
  when:
    - _pgbackrest_server_info|length == 0

- name: Set  _pgbackrest_host when not using hostname
  ansible.builtin.set_fact:
    _pgbackrest_host: "{{ _pgbackrest_server_info[0].ansible_host }}"
  when:
    - "not use_hostname|bool"

- name: Set _pgbackrest_host when using hostname
  ansible.builtin.set_fact:
    _pgbackrest_host: "{{ _pgbackrest_server_info[0].inventory_hostname }}"
  when:
    - use_hostname|bool

- name: Set _standby_index_var for each standby node
  ansible.builtin.set_fact:
    _standby_index_var: "{{ item.index_var }}"
  loop: "{{ standby_node_info }}"
  when:
    - standby_present is defined
    - "'standby' in group_names"
    - item.inventory_hostname ==  inventory_hostname

- name: Ensure lock directory pgbackrest_lock_path exists
  ansible.builtin.file:
    path: "{{ pgbackrest_lock_path }}"
    state: directory
    owner: "{{ pg_owner }}"
    group: "{{ pg_group }}"
    mode: 0750
    recurse: true
  become: true

# spool directory needed with archive-async to store transient data during archiving and recovery
- name: Create spool directory
  ansible.builtin.file:
    path: "{{ pgbackrest_spool_directory }}"
    state: directory
    owner: "{{ pg_owner }}"
    group: "{{ pg_group }}"
    mode: 0750
    recurse: true
  become: true
  when: pgbackrest_archive_method == "async"

- name: Build configuration file {{ pgbackrest_configuration_file }}
  ansible.builtin.template:
    src: "./templates/pgbackrest_{{ group_names[0] }}.{{ pgbackrest_archive_method }}.conf.template"
    dest: "{{ pgbackrest_configuration_file }}"
    owner: "{{ pg_owner }}"
    group: "{{ pg_group }}"
    mode: 0700
  become: true
  vars:
    pgbackrest_host: "{{ _pgbackrest_host }}"

- name: Reset local variables
  ansible.builtin.set_fact:
    _pgbackrest_server_info: ""
    _pgbackrest_host: null
    _standby_index_var: null
