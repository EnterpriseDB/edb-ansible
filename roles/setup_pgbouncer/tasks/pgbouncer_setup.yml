---

- name: Gather service facts
  service_facts:

- name: Open TCP port {{ pgbouncer_listen_port }}
  ansible.posix.firewalld:
    port: "{{ pgbouncer_listen_port }}/tcp"
    permanent: yes
    state: enabled
    immediate: true
  when:
    - ansible_facts.services['firewalld.service'] is defined
    - ansible_facts.services['firewalld.service'].state == 'running'
    - ansible_facts.services['firewalld.service'].status == 'enabled'
  become: yes

- name: Create PgBouncer system group {{ pgbouncer_group }}
  group:
    name: "{{ pgbouncer_group }}"
    state: present
  become: yes

- name: Create PgBouncer system user {{ pgbouncer_user }}
  user:
    name: "{{ pgbouncer_user }}"
    system: true
    group: "{{ pgbouncer_group }}"
    state: present
    create_home: false
  become: yes

- name: Create configuration directories
  file:
    path: "{{ dir_item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  loop:
    - "{{ pgbouncer_config_file | dirname }}"
    - "{{ pgbouncer_databases_file | dirname }}"
    - "{{ pgbouncer_systemd_unit_file | dirname }}"
  loop_control:
    loop_var: dir_item
  become: yes

- name: Create logging directory {{ pgbouncer_log_file | dirname }}
  file:
    path: "{{ pgbouncer_log_file | dirname }}"
    state: directory
    owner: "{{ pgbouncer_user }}"
    group: "{{ pgbouncer_group }}"
    mode: 0755
  become: yes

- name: Create running directory {{ pgbouncer_pid_file | dirname }}
  file:
    path: "{{ pgbouncer_pid_file | dirname }}"
    state: directory
    owner: "{{ pgbouncer_user }}"
    group: "{{ pgbouncer_group }}"
    mode: 0700
  become: yes

- name: Generate PgBouncer configuration file {{ pgbouncer_config_file }}
  template:
    backup: yes
    dest: "{{ pgbouncer_config_file }}"
    owner: "{{ pgbouncer_user }}"
    group: "{{ pgbouncer_group }}"
    src: ./templates/pgbouncer.ini.template
    mode: 0600
  become: yes

- name: Create empty databases file {{ pgbouncer_databases_file }}
  copy:
    content: "[databases]\n"
    dest: "{{ pgbouncer_databases_file }}"
    force: no
    group: "{{ pgbouncer_group }}"
    owner: "{{ pgbouncer_user }}"
    mode: 0600
  become: yes

- name: Create empty authentication file {{ pgbouncer_auth_file }}
  copy:
    content: ""
    dest: "{{ pgbouncer_auth_file }}"
    force: no
    group: "{{ pgbouncer_group }}"
    owner: "{{ pgbouncer_user }}"
    mode: 0600
  become: yes

- name: Generate PgBouncer systemd unit file {{ pgbouncer_systemd_unit_file }}
  template:
    backup: yes
    dest: "{{ pgbouncer_systemd_unit_file }}"
    src: ./templates/pgbouncer.unit.conf.template
    mode: 0644
  become: yes

- name: Stop PgBouncer service
  systemd:
    name: pgbouncer
    state: stopped
  become: yes

- name: Enable and start PgBouncer service
  systemd:
    name: pgbouncer
    enabled: true
    daemon_reload: yes
    state: started
  become: yes
