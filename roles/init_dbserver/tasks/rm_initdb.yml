---
- name: Gather service facts
  ansible.builtin.service_facts:

- name: Stop the efm_service
  ansible.builtin.systemd:
    name: "{{ efm_service }}"
    state: stopped
    enabled: false
  when:
    - ansible_facts.services[efm_service] is defined
    - ansible_facts.services[efm_service].state == 'running'
  become: true

- name: Stop pg service if running
  ansible.builtin.systemd:
    name: "{{ pg_service }}"
    state: stopped
    enabled: false
  when:
    - ansible_facts.services[pg_service] is defined
    - ansible_facts.services[pg_service].state == 'running'
  become: true

- name: Remove configuration directory on Debian family
  ansible.builtin.file:
    path: /etc/edb-as/{{ pg_version }}/{{ pg_instance_name }}/
    state: absent
  when:
    - "ansible_os_family == 'Debian'"
    - "pg_type == 'EPAS'"

- name: Remove configuration directory on Debian family
  ansible.builtin.file:
    path: /etc/postgresql/{{ pg_version }}/{{ pg_instance_name }}/
    state: absent
  when:
    - "ansible_os_family == 'Debian'"
    - "pg_type == 'PG'"

- name: Remove postgres data directory if exists
  ansible.builtin.file:
    path: "{{ pg_data }}"
    state: absent
  become: true

- name: Remove postgres log directory if exists
  ansible.builtin.file:
    path: "{{ pg_log }}"
    state: absent
  become: true
  when: pg_log|length > 0

- name: Remove postgres wal directory if exists
  ansible.builtin.file:
    path: "{{ pg_wal }}"
    state: absent
  become: true
  when: pg_wal|length > 0

- name: Remove postgres local wal archive directory if exists
  ansible.builtin.file:
    path: "{{ pg_local_wal_archive_dir }}"
    state: absent
  become: true
  when: pg_local_wal_archive_dir|length > 0
