---
- name: Set the os variable
  ansible.builtin.set_fact:
    os: "{{ ansible_distribution }}{{ ansible_distribution_major_version }}"

- name: Check support for Operating System
  ansible.builtin.fail:
    msg: "Operating System = {{ os }} not supported."
  when: os not in supported_os

- name: Check supported versions for Database engine
  ansible.builtin.fail:
    msg: "Database Engine Version = {{ pg_version }} not supported.
          Supported versions are {{ supported_pg_version }}"
  when: pg_version|int not in supported_pg_version

- name: Reference pg_type variables
  ansible.builtin.include_vars: "{{ pg_type }}_{{ ansible_os_family }}.yml"

- name: Reference ssl variables
  ansible.builtin.include_vars: edb-ssl.yml
  when: pg_ssl

- name: Gather service facts
  ansible.builtin.service_facts:

- name: Open Postgres TCP port {{ pg_port }}
  ansible.posix.firewalld:
    port: "{{ pg_port }}/tcp"
    permanent: true
    state: enabled
    immediate: true
  when:
    - ansible_facts.services['firewalld.service'] is defined
    - ansible_facts.services['firewalld.service'].state == 'running'
    - ansible_facts.services['firewalld.service'].status == 'enabled'
  become: true

- name: Force cleanup based on force_initdb
  ansible.builtin.include_tasks: rm_initdb.yml
  when:
    - force_initdb is defined
    - force_initdb

- name: Update /etc/hosts based on use_hostname
  ansible.builtin.import_tasks: linux_update_etc_hosts.yml
  when:
    - use_hostname|bool
    - update_etc_file|bool
  become: true

- name: Check and configure the node as primary or pemserver
  become: true
  block:
    - name: Create require directories
      ansible.builtin.import_tasks: create_directories.yml
    - name: Setup systemd for PG
      ansible.builtin.import_tasks: pg_setup_systemd.yml
    - name: Call initdb command
      ansible.builtin.import_tasks: pg_initdb.yml
    - name: Set superuser password
      ansible.builtin.import_tasks: pg_set_superuser_password.yml

- name: Configure ssl based on pg_ssl parameter
  when:
    - pg_ssl
  become: true
  block:
    - name: Send pg_ssl_file if defined
      ansible.builtin.import_tasks: pg_ssl_send_files.yml
    - name: Check if we have SSL configured
      ansible.builtin.import_tasks: pg_ssl_check.yml
    - name: Configure SSL if not exists
      ansible.builtin.import_tasks: pg_ssl_config.yml
