---
- name: Update the ca-certificates package
  ansible.builtin.package:
    name: ca-certificates
    state: present
  become: true

- name: Download EDB GPG key for EL8
  ansible.builtin.rpm_key:
    key: "{{ edb_gpg_key_8 }}"
    state: present
  when:
    - ansible_distribution_major_version == '8'
    - enable_edb_repo|bool
  become: true

- name: Download PGDG GPG key for EL8
  ansible.builtin.rpm_key:
    key: "{{ pg_gpg_key_8 }}"
    state: present
  when:
    - ansible_distribution_major_version == '8'
    - pg_type == 'PG'
  become: true

- name: Download EPEL GPG key for EL8
  ansible.builtin.rpm_key:
    key: "{{ epel_gpg_key_8 }}"
    state: present
  when:
    - ansible_distribution_major_version == '8'
  become: true

- name: Install EPEL repo for EL7
  ansible.builtin.package:
    name: "{{ epel_repo_7 }}"
    state: present
  when: ansible_distribution_major_version == '7'
  become: true

- name: Install PG repo for EL7
  ansible.builtin.package:
    name: "{{ pg_rpm_repo_7 }}"
    state: present
  become: true
  when:
    - ansible_distribution_major_version == '7'
    - pg_type == 'PG'

- name: Install dnf-plugins-core for EL8
  ansible.builtin.package:
    name: dnf-plugins-core
    state: present
  become: true
  when: ansible_distribution_major_version == '8'

- name: Enable powertools for EL8
  ansible.builtin.command: >
    dnf config-manager --set-enabled powertools
  become: true
  when: ansible_distribution_major_version == '8'

- name: Install EPEL repo for EL8
  ansible.builtin.package:
    name: "{{ epel_repo_8 }}"
    state: present
  when: ansible_distribution_major_version == '8'
  become: true

- name: Install PG repo for EL8
  ansible.builtin.package:
    name: "{{ pg_rpm_repo_8 }}"
    state: present
  become: true
  when:
    - ansible_distribution_major_version == '8'
    - pg_type == 'PG'

- name: Install EPAS repo for RedHat
  ansible.builtin.package:
    name: "{{ edb_rpm_repo }}"
    state: present
  become: true
  when: >
    enable_edb_repo|bool and repo_token|length < 1

- name: Set Credentials for EDB Yum Repo
  ansible.builtin.replace:
    path: /etc/yum.repos.d/edb.repo
    regexp: '<username>:<password>'
    replace: "{{ repo_username }}:{{ repo_password }}"
  become: true
  when: >
    enable_edb_repo|bool and repo_token|length < 1

- name: Add additional Redhat repositories
  ansible.builtin.yum_repository:
    name: "{{ item.name }}"
    description: "{{ item.description | default(item.name) }}"
    state: present
    baseurl: "{{ item.baseurl }}"
    gpgcheck: "{{ item.gpgcheck | default('no') }}"
    gpgkey: "{{ item.gpgkey | default(None) }}"
  become: true
  loop: "{{ yum_additional_repos }}"
  when: yum_additional_repos | length > 0

# This is needed for some fresh versions of CentOS8 where this issue is met:
# https://bugzilla.redhat.com/show_bug.cgi?id=1768206
# Executing yum/dnf updateinfo -y makes the import of GPG keys effective even
# if command's return is different from 0.
- name: Execute yum updateinfo
  ansible.builtin.shell: >
    set -o pipefail;
    yum updateinfo -y
  register: updateinfo_output
  become: true
  failed_when: false
  changed_when: updateinfo_output.rc != 0

# Adding BDR repository if BDR nodes are defined
- name: Install curl package if not available
  ansible.builtin.package:
    name: curl
    state: present
  become: true

- name: Install BDR packages if tpa_subscription_token is given
  ansible.builtin.shell: >
      set -o pipefail;
      curl -sS "{{ edb_2q_base_repo_link }}/{{ item }}/{{ pg_version }}/rpm" | bash
  args:
    executable: /bin/bash
  register: reposub
  become: true
  failed_when: >
    reposub.rc != 0 or 'error: ' in reposub.stdout.lower()
  when: >
    tpa_subscription_token|length > 0
    and install_bdr_packages|bool
    and pg_version|int >= 14
  loop: "{{ edb_2q_repositories }}"

- name: Install EDB repository 2.0
  ansible.builtin.shell: >
      set -o pipefail;
      curl -1sLf "{{ edb_repo_script_link }}" | bash
  args:
    executable: /bin/bash
  register: reposub
  become: true
  failed_when: >
    reposub.rc != 0 or 'error: ' in reposub.stdout.lower()
  when: >
    enable_edb_repo|bool and repo_token|length > 0
