---
- name: Verify if file exists - {{ edb_auth_conf }}
  ansible.builtin.stat:
    path: "{{ edb_auth_conf }}"
  register: auth_conf
  when: >
    os != 'Debian9' and enable_edb_repo|bool and repo_token|length < 1
  become: true

- name: Build EDB auth conf
  ansible.builtin.copy:
    dest: "{{ edb_auth_conf }}"
    content: >
      {{ edb_auth_conf_url }} login {{ repo_username }} password {{ repo_password }}
    owner: root
    group: root
    mode: 0600
  when:
    - os != 'Debian9'
    - enable_edb_repo|bool and repo_token|length < 1
    - not auth_conf.stat.exists or auth_conf.stat.size == 0
  become: true

- name: Install gpg
  ansible.builtin.package:
    name: gpg
    state: present
  become: true

- name: Install acl
  ansible.builtin.package:
    name: acl
    state: present
  become: true

- name: Add EDB GPGP Debian keys
  ansible.builtin.apt_key:
    url: "{{ edb_deb_keys }}"
    state: present
  become: true
  when: >
    enable_edb_repo|bool and repo_token|length < 1

- name: Add EDB Debian repo
  ansible.builtin.apt_repository:
    repo: "{{ edb_deb_repo_url }}"
    state: present
    filename: "edb-{{ ansible_distribution_release }}"
  when: >
    os != 'Debian9' and enable_edb_repo|bool and repo_token|length < 1
  become: true

- name: Install apt-transport-https
  ansible.builtin.apt:
    name: apt-transport-https
    update_cache: true
    state: present
  become: true

- name: Add EDB Debian 9 repo
  ansible.builtin.apt_repository:
    repo: "{{ edb_deb_9_repo_url }}"
    state: present
    filename: "edb-{{ ansible_distribution_release }}"
  when: >
      os == 'Debian9' and enable_edb_repo|bool and repo_token|length < 1
  become: true

- name: Add PG Debian keys
  ansible.builtin.apt_key:
    url: "{{ pg_deb_keys }}"
    state: present
  when: pg_type == 'PG'
  become: true

- name: Add PG Debian repo
  ansible.builtin.apt_repository:
    repo: "{{ pg_deb_repo_url }}"
    state: present
    filename: "pgdg"
  when: pg_type == 'PG'
  become: true

- name: Add additional Debian repositories
  ansible.builtin.apt_repository:
    repo: "{{ item.repo }}"
    state: present
    filename: "{{ item.filename }}"
  become: true
  loop: "{{ apt_additional_repos }}"
  when: apt_additional_repos | length > 0

- name: Install BDR packages if tpa_subscription_token is given
  ansible.builtin.shell: >
      set -o pipefail;
      curl -sS "{{ edb_2q_base_repo_link }}/{{ item }}/{{ pg_version }}/deb" | bash
  args:
    executable: /bin/bash
  register: reposub
  become: true
  failed_when: >
    reposub.rc != 0 or 'error: ' in reposub.stdout.lower()
  when: >
    tpa_subscription_token|length > 0
    and install_bdr_packages|bool
    and pg_version|int >= 14
  loop: "{{ edb_2q_repositories }}"

- name: Install EDB repository 2.0
  ansible.builtin.shell: >
      set -o pipefail;
      curl -1sLf "{{ edb_repo_script_link }}" | bash
  args:
    executable: /bin/bash
  register: reposub
  become: true
  failed_when: >
    reposub.rc != 0 or 'error: ' in reposub.stdout.lower()
  when: >
    enable_edb_repo|bool and repo_token|length > 0
