---
- name: Get repo list on RedHat
  ansible.builtin.command: yum repolist
  when: ansible_os_family == 'RedHat'
  become: true
  register: yum_repolist
  changed_when: yum_repolist.rc == '0'

- name: Get repo list on Debian
  ansible.builtin.shell: grep -rhE ^deb /etc/apt/sources.list*
  args:
    executable: /bin/bash
  when: ansible_os_family == 'Debian'
  become: true
  register: apt_sources
  changed_when: apt_sources.rc == '0'

- name: Check for EDB Repo 1.0 on RedHat
  ansible.builtin.assert:
    that:
      - "'EnterpriseDB RPMs' in yum_repolist.stdout"
    fail_msg: "Access to the EDB package repository is not configured"
    success_msg: "Access to the EDB package repository has been configured successfully"
  when:
    - ansible_os_family == 'RedHat'
    - enable_edb_repo|bool
    - repo_token|length < 1

- name: Check for EDB Repo 2.0 on RedHat
  ansible.builtin.assert:
    that:
      - "'enterprisedb-enterprise' in yum_repolist.stdout"
    fail_msg: "Access to the EDB package repository is not configured"
    success_msg: "Access to the EDB package repository has been configured successfully"
  when:
    - ansible_os_family == 'RedHat'
    - enable_edb_repo|bool
    - repo_token|length > 1

- name: Check for PGDG Repo on RedHat
  ansible.builtin.assert:
    that:
      - "'PostgreSQL common RPMs for RHEL' in yum_repolist.stdout"
    fail_msg: "Access to the PGDG package repository is not configured"
    success_msg: "Access to the PGDG package repository has been configured successfully"
  when:
    - ansible_os_family == 'RedHat'
    - pg_type == 'PG'

- name: Check for EDB Postgres Distributed x86_64 Repo on RedHat
  ansible.builtin.assert:
    that:
      - "'enterprisedb-postgres_distributed-x86_64' in yum_repolist.stdout"
    fail_msg: "Access to the EDB Postgres Distributed x86_64 package repository is not configured"
    success_msg: "Access to the EDB Postgres Distributed x86_64 package repository has been configured successfully"
  when:
    - ansible_os_family == 'RedHat'
    - enable_edb_repo|bool
    - install_pgd|bool

- name: Check for EDB Postgres Distributed noarch Repo on RedHat
  ansible.builtin.assert:
    that:
      - "'enterprisedb-postgres_distributed-noarch' in yum_repolist.stdout"
    fail_msg: "Access to the EDB Postgres Distributed noarch package repository is not configured"
    success_msg: "Access to the EDB Postgres Distributed noarch package repository has been configured successfully"
  when:
    - ansible_os_family == 'RedHat'
    - enable_edb_repo|bool
    - install_pgd|bool

- name: Check for EDB Repo on Debian
  ansible.builtin.assert:
    that:
      - "'apt.enterprisedb.com' in apt_sources.stdout"
    fail_msg: "Access to the EDB package repository is not configured"
    success_msg: "Access to the EDB package repository has been configured successfully"
  when:
    - ansible_os_family == 'Debian'
    - enable_edb_repo|bool

- name: Check for PGDG Repo on Debian
  ansible.builtin.assert:
    that:
      - "'apt.postgresql.org' in apt_sources.stdout"
    fail_msg: "Access to the PGDG package repository is not configured"
    success_msg: "Access to the PGDG package repository has been configured successfully"
  when:
    - ansible_os_family == 'Debian'
    - pg_type == 'PG'

- name: Reset variables
  ansible.builtin.set_fact:
    yum_repolist: null
    apt_sources: null
