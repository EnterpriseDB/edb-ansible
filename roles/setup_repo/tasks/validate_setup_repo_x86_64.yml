---
- name: Get repo list on RedHat
  ansible.builtin.yum:
    list: repos
  become: true
  register: yum_repos
  when: ansible_os_family == 'RedHat'

- name: Get PGDG repos on RedHat
  ansible.builtin.set_fact:
    pgdg_repo_list: "{{ yum_repos.results | selectattr('repoid', 'search', 'pgdg') \
                      | selectattr('state', 'equalto', 'enabled') | map(attribute='repoid') | list }}"
  when:
    - ansible_os_family == 'RedHat'
    - enable_pgdg_repo|bool

- name: Get EPEL repos on RedHat
  ansible.builtin.set_fact:
    epel_repo_list: "{{ yum_repos.results | selectattr('repoid', 'search', 'pgdg') \
                       | selectattr('state', 'equalto', 'enabled') | map(attribute='repoid') | list }}"
  when:
    - ansible_os_family == 'RedHat'
    - enable_epel_repo|bool

- name: Get EDB Repos 1.0 on RedHat
  ansible.builtin.set_fact:
    edb_repos_1_list: "{{ yum_repos.results | selectattr('repoid', 'search', 'edb') \
                      | selectattr('state', 'equalto', 'enabled') | map(attribute='repoid') | list }}"
  when:
    - ansible_os_family == 'RedHat'
    - enable_edb_repo|bool
    - repo_token|length <= 1

- name: Get EDB Repos 2.0 on RedHat
  ansible.builtin.set_fact:
    edb_repos_2_list: "{{ yum_repos.results | selectattr('repoid', 'search', 'enterprisedb') \
                      | selectattr('state', 'equalto', 'enabled') | map(attribute='repoid') | list }}"
  when:
    - ansible_os_family == 'RedHat'
    - enable_edb_repo|bool
    - repo_token|length > 1

- name: Get repo list on Debian
  ansible.builtin.shell: grep -rhE ^deb /etc/apt/sources.list*
  args:
    executable: /bin/bash
  when: ansible_os_family == 'Debian'
  become: true
  register: apt_sources
  changed_when: apt_sources.rc == '0'

- name: Check for EDB Repo 1.0 on RedHat
  ansible.builtin.assert:
    that:
      - edb_repos_1_list|length > 1
    fail_msg: "Access to the EDB package repository is not configured"
    success_msg: "Access to the EDB package repository has been configured successfully"
  when:
    - ansible_os_family == 'RedHat'
    - enable_edb_repo|bool
    - repo_token|length <= 1

- name: Check for EDB Repo 2.0 on RedHat
  ansible.builtin.assert:
    that:
      - edb_repos_2_list|length > 1
    fail_msg: "Access to the EDB package repository is not configured"
    success_msg: "Access to the EDB package repository has been configured successfully"
  when:
    - ansible_os_family == 'RedHat'
    - enable_edb_repo|bool
    - repo_token|length > 1

- name: Check for PGDG Repo on RedHat
  ansible.builtin.assert:
    that:
      - pgdg_repo_list|length > 1
    fail_msg: "Access to the PGDG package repository is not configured"
    success_msg: "Access to the PGDG package repository has been configured successfully"
  when:
    - ansible_os_family == 'RedHat'
    - pg_type == 'PG'

- name: Check for EDB Postgres Distributed x86_64 Repo on RedHat
  ansible.builtin.assert:
    that:
      - "'enterprisedb-postgres_distributed-x86_64' in edb_repos_2_list"
    fail_msg: "Access to the EDB Postgres Distributed x86_64 package repository is not configured"
    success_msg: "Access to the EDB Postgres Distributed x86_64 package repository has been configured successfully"
  when:
    - ansible_os_family == 'RedHat'
    - enable_edb_repo|bool
    - install_pgd|bool

- name: Check for EDB Postgres Distributed noarch Repo on RedHat
  ansible.builtin.assert:
    that:
      - "'enterprisedb-postgres_distributed-noarch' in edb_repos_2_list"
    fail_msg: "Access to the EDB Postgres Distributed noarch package repository is not configured"
    success_msg: "Access to the EDB Postgres Distributed noarch package repository has been configured successfully"
  when:
    - ansible_os_family == 'RedHat'
    - enable_edb_repo|bool
    - install_pgd|bool

- name: Check for EDB Repo on Debian
  ansible.builtin.assert:
    that:
      - "'apt.enterprisedb.com' in apt_sources.stdout"
    fail_msg: "Access to the EDB package repository is not configured"
    success_msg: "Access to the EDB package repository has been configured successfully"
  when:
    - ansible_os_family == 'Debian'
    - enable_edb_repo|bool

- name: Check for PGDG Repo on Debian
  ansible.builtin.assert:
    that:
      - "'apt.postgresql.org' in apt_sources.stdout"
    fail_msg: "Access to the PGDG package repository is not configured"
    success_msg: "Access to the PGDG package repository has been configured successfully"
  when:
    - ansible_os_family == 'Debian'
    - pg_type == 'PG'

- name: Reset variables
  ansible.builtin.set_fact:
    yum_repos: null
    pgdg_repo_list: null
    epel_repo_list: null
    edb_repos_1_list: null
    edb_repos_2_list: null
    apt_sources: null
